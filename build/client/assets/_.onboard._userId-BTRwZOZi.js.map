{"version":3,"file":"_.onboard._userId-BTRwZOZi.js","sources":["../../../app/routes/_withNav+/_withSideBar+/_manage+/user+/_.onboard.$userId.tsx"],"sourcesContent":["import { Form, Label, Input } from '@components/ui';\nimport ErrorReport from '@components/ui/ErrorReport';\nimport { Modal } from '@components/ui/modals';\nimport { Transition } from '@headlessui/react';\nimport { UserRank } from '@lib/constants';\nimport {\n  Outlet,\n  useLoaderData,\n  useParams,\n  useSearchParams,\n} from '@remix-run/react';\nimport type { EditLoaderFn } from '@routes/_withNav+/_withSideBar+/_manage+/user+/.server/user.queries';\nimport { useState} from 'react';\n\nexport {\n  EditLoaderFn as loader,\n  EditActionFn as action,\n} from './.server/user.queries';\n\nconst EditTemplate = () => {\n  const { userId } = useParams();\n  const [searchParams] = useSearchParams();\n  const orgId = searchParams.get('org') ?? '';\n  const { user, orgs, allUsers, loggedIn } = useLoaderData<typeof EditLoaderFn>();\n  const [showMove, setShowMove] = useState(false);\n  const [showSupervisor, setShowSupervisor] = useState(false);\n  const [supervisor, setSupervisor] = useState(false);\n  const [assignedOrg, setAssignedOrg] = useState(null);\n\n  const handleGraduatedChange = () => {\n    setShowSupervisor((prev) => {\n      const newGraduated = !prev;\n      if (!newGraduated) {\n        setSupervisor(false);\n      }\n      return newGraduated;\n    });\n  };\n\n  const handleSupervisorChange = (e) => {\n    const value = e.target.value;\n    setSupervisor(value !== 'default');\n  };\n\n  const isFormValid = () =>\n    user.workEmail !== '' && user.name !== '' && user.currentOrg.name !== '';\n\n  return (\n    <Modal>\n      <Form method=\"post\">\n        <Input.Hidden name=\"_navigateOrgId\" value={orgId} />\n        <Input.Hidden name=\"userId\" value={userId} />\n        <Modal.Body>\n          <Form.Row>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input.Text name=\"name\" defaultValue={user?.name} />\n          </Form.Row>\n          <Form.Row>\n            <Label htmlFor=\"workEmail\">Email</Label>\n            <Input.Email\n              name=\"workEmail\"\n              defaultValue={user?.workEmail}\n              pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"/>\n          </Form.Row>\n          <div className=\"flex gap-4\">\n            <Form.Row className=\"w-full\">\n              <Label htmlFor=\"assignedOrg\">Assigned Organization</Label>\n              <Input.Select\n                options={orgs}\n                name=\"assignedOrg\"\n                valueKey=\"uuid\"\n                value={assignedOrg} // Bind to state\n                onChange={(e) => setAssignedOrg(e.target.value)}/>\n            </Form.Row>\n            {user.currentOrg?.name === 'GLOBAL' && (\n              <Form.Row className=\"text-center w-full\">\n                <Label htmlFor=\"assignedOrg\">User Requested Organization</Label>\n                <p className=\"mt-1 rounded-md border border-zinc-300 py-2\">\n                  {user.requestedOrg?.name}\n                </p>\n              </Form.Row>\n            )}\n          </div>\n\n          {/* Show Supervisor dropdown only if needed */}\n          {showSupervisor && (\n            <Form.Row>\n              <Label>Supervisor</Label>\n              <Input.Select\n                options={allUsers\n                  .filter((u) => UserRank[u.rank].order > 4)     //4 being SrA, could change to supervisor t/f in db instead of checking rank\n                  .filter((u) => u.currentOrgId === assignedOrg)\n                  .sort((a, b) => a.name.localeCompare(b.name))\n                  .map((u) => ({\n                    id: u.id,\n                    name: `${UserRank[u.rank].abb} ${u.name}`,\n                  }))}\n                name=\"supervisorId\"\n                valueKey=\"id\"\n                defaultValue=\"\"\n                onChange={handleSupervisorChange}/>\n            </Form.Row>\n          )}\n\n          <Form.Row>\n            <Label.Heading>Questions</Label.Heading>\n            <Input.CheckboxGroup>\n              <Input.Checkbox\n                name=\"isDormResident\"\n                defaultChecked={user.isDormResident ?? false}\n                label=\"Is the member a dorm resident?\"/>\n              <Input.Checkbox\n                name=\"hasDependents\"\n                defaultChecked={user.hasDependents ?? false}\n                label=\"Does the member currently have any dependents?\"/>\n              <Input.Checkbox\n                name=\"hasEFMP\"\n                defaultChecked={user.hasEFMP ?? false}\n                label=\"Is the member currently enrolled in the EFMP?\"/>\n              {loggedIn !== 'SUPERADMINPROFILE' && <Input.Checkbox\n                name=\"hasGraduated\"\n                defaultChecked={user.hasGraduated ?? false}\n                label=\"Has the member recently graduated from tech-school (60 days)?\"\n                onChange={handleGraduatedChange}/>}\n            </Input.CheckboxGroup>\n          </Form.Row>\n\n          <Form.Row className=\"border-t-2\">\n            <div className=\"mt-4\">\n              <Input.Checkbox\n                name=\"assignChecklist\"\n                onChange={(e) => setShowMove(e.target.checked)}\n                reverse={true}\n                label={`Would you like to assign a checklist to ${user.name}?`}/>\n            </div>\n            <Transition\n              show={showMove}\n              as=\"div\"\n              enter=\"transition duration-200\"\n              enterFrom=\"opacity-0 -translate-y-10\"\n              enterTo=\"opacity-100 translate-y-0\"\n              leaveTo=\"opacity-0 -translate-y-10\"\n              leave=\"transition duration-200\">\n              <p className=\"mb-2 text-sm text-zinc-600\">\n                What type of checklist would you like to assign?\n              </p>\n              <div className=\"flex gap-10\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"moveType\"\n                    value=\"PCS\"\n                    required={showMove}\n                    defaultChecked={true}\n                    id=\"pcsMoveType\"\n                    className=\"border sr-only peer border-zinc-400 rounded px-6\"/>\n                  <span className=\"border hover:bg-blue-200 hover:cursor-pointer peer-checked:text-white border-zinc-400 rounded-lg px-6 py-1 text-sm peer select-none peer-checked:bg-blue-500 peer-checked:font-bold font-medium text-gray-900 dark:text-gray-300\">\n                    PCS\n                  </span>\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"moveType\"\n                    value=\"PCA\"\n                    required={showMove}\n                    id=\"pcaMoveType\"\n                    className=\"border sr-only peer border-zinc-400 rounded px-6\"/>\n                  <span className=\"border hover:bg-blue-200 hover:cursor-pointer peer-checked:text-white border-zinc-400 rounded-lg px-6 py-1 text-sm peer select-none peer-checked:bg-blue-500 peer-checked:font-bold font-medium text-gray-900 dark:text-gray-300\">\n                    PCA\n                  </span>\n                </label>\n              </div>\n            </Transition>\n          </Form.Row>\n        </Modal.Body>\n        <Modal.Buttons\n          link=\"..\"\n          value=\"onboard\"\n          disabled={showSupervisor && !supervisor}>\n          {user.cssVerified &&\n          isFormValid() &&\n          user.currentOrg?.name === 'GLOBAL'\n            ? 'Save'\n            : 'Verify & Onboard'}\n        </Modal.Buttons>\n      </Form>\n      <Outlet />\n    </Modal>\n  );\n};\n\nexport const ErrorBoundary = ErrorReport;\nexport default EditTemplate;\n"],"names":["EditTemplate","userId","useParams","searchParams","useSearchParams","orgId","get","user","orgs","allUsers","loggedIn","useLoaderData","showMove","setShowMove","useState","showSupervisor","setShowSupervisor","supervisor","setSupervisor","assignedOrg","setAssignedOrg","handleGraduatedChange","prev","newGraduated","handleSupervisorChange","e","value","target","isFormValid","workEmail","name","currentOrg","Modal","children","jsxs","Form","method","jsx","Input","Hidden","Body","Row","Label","htmlFor","Text","defaultValue","Email","pattern","className","Select","options","valueKey","onChange","requestedOrg","filter","u","UserRank","rank","order","currentOrgId","sort","a","b","localeCompare","map","id","abb","Heading","CheckboxGroup","Checkbox","defaultChecked","isDormResident","label","hasDependents","hasEFMP","hasGraduated","checked","reverse","Transition","show","as","enter","enterFrom","enterTo","leaveTo","leave","type","required","Buttons","link","disabled","cssVerified","Outlet","ErrorBoundary","ErrorReport"],"mappings":"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"}