{"version":3,"file":"usePagination-CoTN8wEl.js","sources":["../../../app/lib/hooks/usePagination.tsx"],"sourcesContent":["import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\nimport { useState, useMemo, useEffect } from 'react';\nimport { useSearchParams } from '@remix-run/react';\n\nexport function usePagination(items: any[], initialPerPage: number) {\n  const [currentItems, setCurrentItems] = useState<any[]>([]);\n  const [currentParams, setSearchParams] = useSearchParams();\n  const pageParam = currentParams.get('page');\n  let page = 1;\n  if (pageParam) {\n    page = Number.parseInt(pageParam);\n  }\n  const [currentPage, setCurrentPage] = useState<number>(page);\n  const itemParam = currentParams.get('items');\n  let itemsToShow = initialPerPage;\n  if (itemParam) {\n    itemsToShow = Number.parseInt(itemParam);\n  }\n  const [itemsPerPage, setItemsPerPage] = useState<number>(itemsToShow);\n\n  function setPageParam(page: number) {\n    setSearchParams((prev) => {\n      prev.set('page', String(page));\n      return prev;\n    });\n  }\n\n  function setItemParam(toShow: number) {\n    setSearchParams((prev) => {\n      prev.set('items', String(toShow));\n      return prev;\n    });\n  }\n\n  useEffect(() => {\n    if (pageParam) setCurrentPage(Number.parseInt(pageParam));\n    else setCurrentPage(1);\n  }, [pageParam]);\n\n  useEffect(() => {\n    if (itemParam) {\n      setItemsPerPage(Number.parseInt(itemParam));\n      setPageParam(1);\n    } else setItemsPerPage(initialPerPage);\n  }, [itemParam, initialPerPage]);\n\n  const totalItemsLength = items.length;\n\n  // Memoize derived values to avoid unnecessary recalculations\n  const totalPages = useMemo(\n    () => Math.ceil(totalItemsLength / itemsPerPage),\n    [totalItemsLength, itemsPerPage]\n  );\n  const indexOfLastItem = useMemo(\n    () => currentPage * itemsPerPage,\n    [currentPage, itemsPerPage]\n  );\n  const indexOfFirstItem = useMemo(\n    () => indexOfLastItem - itemsPerPage,\n    [indexOfLastItem, itemsPerPage]\n  );\n\n  useEffect( () => {\n    if (items && items.length > 0) {\n      setCurrentItems(items.slice(indexOfFirstItem, indexOfLastItem));\n    } else {\n      setCurrentItems([]);\n    }\n  }, [indexOfFirstItem, indexOfLastItem, items] );\n\n  return {\n    currentItems,\n    currentPage,\n    totalPages,\n    itemsPerPage,\n    setItemsPerPage: setItemParam,\n    itemPos: {\n      length: totalItemsLength,\n      first: indexOfFirstItem + 1,\n      last:\n        totalItemsLength > itemsPerPage\n          ? indexOfFirstItem + itemsPerPage\n          : totalItemsLength,\n    },\n    setCurrentPage: setPageParam,\n    nextPage: () => setPageParam(Math.min(currentPage + 1, totalPages)),\n    prevPage: () => setPageParam(Math.max(currentPage - 1, 1)),\n  };\n}\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  setCurrentPage: (page: number) => void;\n  setItemsPerPage: (page: number) => void;\n  itemsPerPage: number;\n  nextPage: () => void;\n  prevPage: () => void;\n  itemPos: {\n    first: number;\n    last: number;\n    length: number;\n  };\n}\n\nexport function Pagination({\n  currentPage,\n  totalPages,\n  setCurrentPage,\n  nextPage,\n  prevPage,\n  itemPos,\n  setItemsPerPage,\n  itemsPerPage,\n}: PaginationProps) {\n  const pages = useMemo(() => {\n    let pageNumbers: Array<string | number> = [];\n\n    if (totalPages < 10) {\n      pageNumbers = Array.from({ length: totalPages }, (_, i) => i + 1);\n    } else {\n      if (currentPage < 6) {\n        pageNumbers = Array.from<unknown, string | number>(\n          { length: 7 },\n          (_, i) => i + 1\n        ).concat(['...'], [totalPages]);\n      } else if (currentPage >= 6 && currentPage <= totalPages - 5) {\n        pageNumbers = [1, '...'].concat(\n          Array.from({ length: 5 }, (_, i) => currentPage - 2 + i),\n          ['...'],\n          [totalPages]\n        );\n      } else {\n        pageNumbers = [1, '...'].concat(\n          Array.from({ length: 6 }, (_, i) => totalPages - 6 + i),\n          totalPages\n        );\n      }\n    }\n\n    return pageNumbers;\n  }, [currentPage, totalPages]);\n\n  function handleChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    setCurrentPage(+e.target.value);\n    // navigate(`?page=${e.target.value}`);\n  }\n\n  function handleClick(page: number) {\n    setCurrentPage(page);\n  }\n\n  const arrowButtonStyle =\n    'flex w-14 items-center justify-center border border-gray-300 bg-white disabled:bg-zinc-300 px-2 py-2 font-medium text-gray-500 hover:bg-gray-50';\n\n  function handlePerPageChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    setItemsPerPage(+e.target.value);\n  }\n\n  return (\n    <div className=\"flex flex-col justify-center items-center gap-2 mt-5\">\n      <div className=\"flex items-center gap-16 text-sm\">\n        <div>\n          Showing <span className=\"font-bold\">{itemPos.first}</span> to{' '}\n          <span className=\"font-bold\">{itemPos.last}</span> of{' '}\n          <span className=\"font-bold\">{itemPos.length}</span> items\n        </div>\n        <div>\n          Go to page:\n          <select\n            onChange={handleChange}\n            value={currentPage}\n            disabled={totalPages === 1}\n            className=\"ml-3 rounded-md border-gray-300 text-xs shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50\">\n            {Array.from({ length: totalPages }, (_, i) => i + 1).map(\n              (page, index) => (\n                <option key={`goto-${page}-${index}`} value={page}>\n                  {page}\n                </option>\n              )\n            )}\n          </select>\n        </div>\n        <div>\n          Items per page:\n          <select\n            value={itemsPerPage}\n            onChange={handlePerPageChange}\n            className=\"ml-3 rounded-md border-gray-300 text-xs shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50\">\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n            <option value={50}>50</option>\n            <option value={100}>100</option>\n          </select>\n        </div>\n      </div>\n      <nav aria-label=\"Pagination\">\n        <ul className=\"inline-flex items-center -space-x-px rounded-md text-sm shadow-sm\">\n          <li>\n            <button\n              onClick={prevPage}\n              disabled={currentPage === 1}\n              className={arrowButtonStyle + ' rounded-l-md'}>\n              <span className=\"sr-only\">Previous</span>\n              <ChevronLeftIcon className=\"w-5 h-5\" />\n            </button>\n          </li>\n          {pages.map((page, index) => (\n            <li key={index}>\n              {typeof page === 'number' ? (\n                <button\n                  onClick={() => {\n                    handleClick(page);\n                  }}\n                  disabled={currentPage === page}\n                  className={`flex w-14 justify-center items-center border border-gray-300 px-4 py-2 font-medium disabled:border-x-zinc-400 ${\n                    currentPage === page\n                      ? 'bg-zinc-200 text-gray-700'\n                      : 'bg-white text-gray-500 hover:bg-gray-50'\n                  }`}\n                  aria-current={currentPage === page ? 'page' : undefined}>\n                  {page}\n                </button>\n              ) : (\n                <span className=\"flex justify-center w-14 items-center border border-gray-300 px-4 py-2 font-medium bg-white text-gray-500\">\n                  ...\n                </span>\n              )}\n            </li>\n          ))}\n          <li>\n            <button\n              onClick={nextPage}\n              disabled={currentPage === totalPages}\n              className={\n                arrowButtonStyle + ' rounded-r-md disabled:border-l-zinc-400'\n              }>\n              <span className=\"sr-only\">Next</span>\n              <ChevronRightIcon className=\"w-5 h-5\" />\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n"],"names":["usePagination","items","initialPerPage","currentItems","setCurrentItems","useState","currentParams","setSearchParams","useSearchParams","pageParam","page","currentPage","setCurrentPage","itemParam","itemsToShow","itemsPerPage","setItemsPerPage","setPageParam","prev","setItemParam","toShow","useEffect","totalItemsLength","totalPages","useMemo","indexOfLastItem","indexOfFirstItem","Pagination","nextPage","prevPage","itemPos","pages","pageNumbers","_","i","handleChange","e","handleClick","arrowButtonStyle","handlePerPageChange","jsxs","jsx","index","ChevronLeftIcon","ChevronRightIcon"],"mappings":"2eAIgB,SAAAA,EAAcC,EAAcC,EAAwB,CAClE,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAgB,CAAA,CAAE,EACpD,CAACC,EAAeC,CAAe,EAAIC,EAAgB,EACnDC,EAAYH,EAAc,IAAI,MAAM,EAC1C,IAAII,EAAO,EACPD,IACKC,EAAA,OAAO,SAASD,CAAS,GAElC,KAAM,CAACE,EAAaC,CAAc,EAAIP,EAAAA,SAAiBK,CAAI,EACrDG,EAAYP,EAAc,IAAI,OAAO,EAC3C,IAAIQ,EAAcZ,EACdW,IACYC,EAAA,OAAO,SAASD,CAAS,GAEzC,KAAM,CAACE,EAAcC,CAAe,EAAIX,EAAAA,SAAiBS,CAAW,EAEpE,SAASG,EAAaP,EAAc,CAClCH,EAAiBW,IACfA,EAAK,IAAI,OAAQ,OAAOR,CAAI,CAAC,EACtBQ,EACR,CAAA,CAGH,SAASC,EAAaC,EAAgB,CACpCb,EAAiBW,IACfA,EAAK,IAAI,QAAS,OAAOE,CAAM,CAAC,EACzBF,EACR,CAAA,CAGHG,EAAAA,UAAU,IAAM,CACCT,EAAXH,EAA0B,OAAO,SAASA,CAAS,EACnC,CADoC,CACnC,EACpB,CAACA,CAAS,CAAC,EAEdY,EAAAA,UAAU,IAAM,CACVR,GACcG,EAAA,OAAO,SAASH,CAAS,CAAC,EAC1CI,EAAa,CAAC,KACOf,CAAc,CAAA,EACpC,CAACW,EAAWX,CAAc,CAAC,EAE9B,MAAMoB,EAAmBrB,EAAM,OAGzBsB,EAAaC,EAAA,QACjB,IAAM,KAAK,KAAKF,EAAmBP,CAAY,EAC/C,CAACO,EAAkBP,CAAY,CACjC,EACMU,EAAkBD,EAAA,QACtB,IAAMb,EAAcI,EACpB,CAACJ,EAAaI,CAAY,CAC5B,EACMW,EAAmBF,EAAA,QACvB,IAAMC,EAAkBV,EACxB,CAACU,EAAiBV,CAAY,CAChC,EAEAM,OAAAA,EAAAA,UAAW,IAAM,CACXpB,GAASA,EAAM,OAAS,EAC1BG,EAAgBH,EAAM,MAAMyB,EAAkBD,CAAe,CAAC,EAE9DrB,EAAgB,CAAA,CAAE,CAEnB,EAAA,CAACsB,EAAkBD,EAAiBxB,CAAK,CAAE,EAEvC,CACL,aAAAE,EACA,YAAAQ,EACA,WAAAY,EACA,aAAAR,EACA,gBAAiBI,EACjB,QAAS,CACP,OAAQG,EACR,MAAOI,EAAmB,EAC1B,KACEJ,EAAmBP,EACfW,EAAmBX,EACnBO,CACR,EACA,eAAgBL,EAChB,SAAU,IAAMA,EAAa,KAAK,IAAIN,EAAc,EAAGY,CAAU,CAAC,EAClE,SAAU,IAAMN,EAAa,KAAK,IAAIN,EAAc,EAAG,CAAC,CAAC,CAC3D,CACF,CAiBO,SAASgB,EAAW,CACzB,YAAAhB,EACA,WAAAY,EACA,eAAAX,EACA,SAAAgB,EACA,SAAAC,EACA,QAAAC,EACA,gBAAAd,EACA,aAAAD,CACF,EAAoB,CACZ,MAAAgB,EAAQP,EAAAA,QAAQ,IAAM,CAC1B,IAAIQ,EAAsC,CAAC,EAE3C,OAAIT,EAAa,GACDS,EAAA,MAAM,KAAK,CAAE,OAAQT,GAAc,CAACU,EAAGC,IAAMA,EAAI,CAAC,EAE5DvB,EAAc,EAChBqB,EAAc,MAAM,KAClB,CAAE,OAAQ,CAAE,EACZ,CAACC,EAAGC,IAAMA,EAAI,GACd,OAAO,CAAC,KAAK,EAAG,CAACX,CAAU,CAAC,EACrBZ,GAAe,GAAKA,GAAeY,EAAa,EAC3CS,EAAA,CAAC,EAAG,KAAK,EAAE,OACvB,MAAM,KAAK,CAAE,OAAQ,CAAK,EAAA,CAACC,EAAGC,IAAMvB,EAAc,EAAIuB,CAAC,EACvD,CAAC,KAAK,EACN,CAACX,CAAU,CACb,EAEcS,EAAA,CAAC,EAAG,KAAK,EAAE,OACvB,MAAM,KAAK,CAAE,OAAQ,CAAK,EAAA,CAACC,EAAGC,IAAMX,EAAa,EAAIW,CAAC,EACtDX,CACF,EAIGS,CAAA,EACN,CAACrB,EAAaY,CAAU,CAAC,EAE5B,SAASY,EAAaC,EAAyC,CAC9CxB,EAAA,CAACwB,EAAE,OAAO,KAAK,CAAA,CAIhC,SAASC,EAAY3B,EAAc,CACjCE,EAAeF,CAAI,CAAA,CAGrB,MAAM4B,EACJ,kJAEF,SAASC,EAAoBH,EAAyC,CACpDpB,EAAA,CAACoB,EAAE,OAAO,KAAK,CAAA,CAI/B,OAAAI,EAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mCACb,SAAA,CAAAA,OAAC,MAAI,CAAA,SAAA,CAAA,WACMC,EAAA,IAAA,OAAA,CAAK,UAAU,YAAa,WAAQ,MAAM,EAAO,MAAI,IAC7DA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAa,WAAQ,KAAK,EAAO,MAAI,IACpDA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAa,WAAQ,OAAO,EAAO,QAAA,EACrD,SACC,MAAI,CAAA,SAAA,CAAA,cAEHA,EAAA,IAAC,SAAA,CACC,SAAUN,EACV,MAAOxB,EACP,SAAUY,IAAe,EACzB,UAAU,qLACT,SAAA,MAAM,KAAK,CAAE,OAAQA,CAAA,EAAc,CAACU,EAAGC,IAAMA,EAAI,CAAC,EAAE,IACnD,CAACxB,EAAMgC,IACLD,EAAAA,IAAC,SAAqC,CAAA,MAAO/B,EAC1C,SAAAA,CAAA,EADU,QAAQA,CAAI,IAAIgC,CAAK,EAElC,CAAA,CAEJ,CAAA,CACF,EACF,SACC,MAAI,CAAA,SAAA,CAAA,kBAEHF,EAAA,KAAC,SAAA,CACC,MAAOzB,EACP,SAAUwB,EACV,UAAU,qLACV,SAAA,CAACE,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAE,KAAA,EACpBA,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAE,KAAA,EACpBA,EAAA,IAAA,SAAA,CAAO,MAAO,GAAI,SAAE,KAAA,EACpBA,EAAA,IAAA,SAAA,CAAO,MAAO,IAAK,SAAG,KAAA,CAAA,CAAA,CAAA,CAAA,CACzB,CACF,CAAA,CAAA,EACF,QACC,MAAI,CAAA,aAAW,aACd,SAACD,EAAA,KAAA,KAAA,CAAG,UAAU,oEACZ,SAAA,CAAAC,MAAC,KACC,CAAA,SAAAD,EAAA,KAAC,SAAA,CACC,QAASX,EACT,SAAUlB,IAAgB,EAC1B,UAAW2B,EAAmB,gBAC9B,SAAA,CAACG,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAQ,WAAA,EAClCA,EAAAA,IAACE,EAAgB,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAAA,EAEzC,EACCZ,EAAM,IAAI,CAACrB,EAAMgC,IACfD,EAAAA,IAAA,KAAA,CACE,SAAO,OAAA/B,GAAS,SACf+B,EAAA,IAAC,SAAA,CACC,QAAS,IAAM,CACbJ,EAAY3B,CAAI,CAClB,EACA,SAAUC,IAAgBD,EAC1B,UAAW,iHACTC,IAAgBD,EACZ,4BACA,yCACN,GACA,eAAcC,IAAgBD,EAAO,OAAS,OAC7C,SAAAA,CAAA,CAAA,QAGF,OAAK,CAAA,UAAU,4GAA4G,SAE5H,KAAA,CAAA,GAlBKgC,CAoBT,CACD,QACA,KACC,CAAA,SAAAF,EAAA,KAAC,SAAA,CACC,QAASZ,EACT,SAAUjB,IAAgBY,EAC1B,UACEe,EAAmB,2CAErB,SAAA,CAACG,EAAA,IAAA,OAAA,CAAK,UAAU,UAAU,SAAI,OAAA,EAC9BA,EAAAA,IAACG,EAAiB,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAAA,CAE1C,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ"}