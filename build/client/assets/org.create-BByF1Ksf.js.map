{"version":3,"file":"org.create-BByF1Ksf.js","sources":["../../../app/routes/_withNav+/_withSideBar+/_manage+/org.create.tsx"],"sourcesContent":["import { Breadcrumbs } from '@components/OrgBreadcrumbs';\nimport ErrorReport from '@components/ui/ErrorReport';\nimport { InputRow, TextInput, TextLabel, Input } from '@components/ui/Input';\nimport { Modal } from '@components/ui/modals';\nimport usePermissions from '@lib/hooks/usePermissions';\nimport { Attribute, RolePermissions } from '@lib/utils';\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { requireUser, requireUserAsObject } from '@services/user.server';\nimport React, { useEffect, useState } from 'react';\nimport { AuthorizationError } from 'remix-auth';\nimport { jsonWithError, redirectWithSuccess } from 'remix-toast';\nimport z from 'zod';\nimport { createOrg } from './.server/org.queries';\nimport { useRootLayoutData } from '@lib/hooks/useMatchesData';\nimport { Models } from '@lib/models.server';\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  await requireUser(request, {\n    permissions: Attribute.ORGS_READWRITE,\n  });\n\n  const searchQuery = new URL(request.url).searchParams;\n\n  let orgParam = searchQuery.get('org');\n\n  const ancestors = await Models.org.findAncestors(orgParam ?? '');\n  const ancestorStrings = ancestors.map((org) => org.uuid);\n  return json({ ancestors: ancestorStrings });\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  try {\n    const orgCreateSchema = z.object({\n      orgName: z.string().min(3).max(80),\n      orgId: z.string().optional(),\n      baseId: z.string().optional(),\n      isWing: z.preprocess((value) => value === 'on', z.boolean()),\n      abbreviation: z.string(),\n      isOrg: z.preprocess((value) => value === 'on', z.boolean()),\n      isBase: z.preprocess((value) => value === 'on', z.boolean()),\n    });\n\n    const {\n      orgId: parentOrgId,\n      orgName: name,\n      abbreviation,\n      baseId,\n      isWing,\n      isBase,\n    } = orgCreateSchema.parse(\n      Object.fromEntries((await request.formData()).entries())\n    );\n    let userId;\n    if (isBase) {\n      // require Attributes.BASES_READWRITE\n      ({ id: userId } = await requireUserAsObject(request, {\n        permissions: Attribute.BASES_READWRITE,\n        options: { redirectOnFailure: false },\n      }));\n    } else {\n      ({ id: userId } = await requireUserAsObject(request, {\n        permissions: Attribute.ORGS_READWRITE,\n        options: { redirectOnFailure: false },\n      }));\n    }\n\n    if (!isBase && parentOrgId === 'DAF')\n      return jsonWithError(\n        { status: 'error', error: 'organization location required' },\n        'Organization can not be at base level.'\n      );\n\n    if (!isWing && parentOrgId === 'default')\n      return jsonWithError(\n        { status: 'error', error: 'parent org is required' },\n        'There was error creating the organization.'\n      );\n\n    if (!userId)\n      return jsonWithError(\n        { status: 'error', error: 'user required' },\n        'There was error creating the organization.'\n      );\n\n    await createOrg({\n      userId,\n      parentOrgId,\n      name,\n      baseId: baseId,\n      abbreviation,\n      isWing,\n      isBase,\n      createdAt: new Date(Date.now()),\n      createdBy: userId,\n      updatedAt: new Date(Date.now()),\n      updatedBy: userId,\n    });\n  } catch (e) {\n    console.error(e);\n    if (e instanceof Error) {\n      if (e instanceof AuthorizationError) {\n        return jsonWithError(\n          { status: 'error', message: 'Authorization Error' },\n          'Authorization Error.'\n        );\n      }\n\n      return jsonWithError(\n        { status: 'error', message: 'There was an error.' },\n        'There was an error.'\n      );\n    }\n  }\n  return redirectWithSuccess('/org', 'Organization Created Successfully!');\n}\n\ntype AdminRowProps = {\n  baseIsChecked: boolean;\n  setBaseIsChecked: Function;\n  orgChecked: boolean;\n  userPermissions: any;\n  ancestors: string[];\n  parentNode: any;\n};\n\nfunction AdminRow({\n  baseIsChecked,\n  setBaseIsChecked,\n  userPermissions,\n  ancestors,\n  parentNode,\n}: AdminRowProps) {\n  const checkPermissions = usePermissions();\n  const [orgIsChecked, setOrgIsChecked] = useState(false);\n  const [newParent, setNewParent] = useState(parentNode.uuid);\n\n  useEffect(() => {\n    setOrgIsChecked(!checkPermissions(userPermissions, RolePermissions.ADMIN));\n  }, [userPermissions, checkPermissions]);\n\n  return (\n    <div className=\"\">\n      {checkPermissions(userPermissions, RolePermissions.ADMIN) && (\n        <InputRow className=\"inline-flex w-full justify-around px-10\">\n          <Input.Radiobox\n            name=\"isBase\"\n            label=\"Create New Base\"\n            checked={baseIsChecked}\n            onChange={() => {\n              setBaseIsChecked(!baseIsChecked);\n              setOrgIsChecked(false);\n            }}/>\n          <Input.Radiobox\n            name=\"isOrg\"\n            label=\"Create New Org\"\n            checked={orgIsChecked}\n            onChange={() => {\n              setOrgIsChecked(!orgIsChecked);\n              setBaseIsChecked(false);\n            }}/>\n        </InputRow>\n      )}\n      {orgIsChecked && (\n        <>\n          <InputRow className=\"\">\n            <input type=\"hidden\" value={newParent} name=\"orgId\"></input>\n            <TextLabel htmlFor=\"orgId\">Where is it located?</TextLabel>\n            <Breadcrumbs\n              tree={parentNode}\n              setNewParent={setNewParent}\n              ancestors={ancestors} />\n          </InputRow>\n          <InputRow>\n            <Input.Checkbox label=\"Is this a Wing-level Organization?\" name=\"isWing\" />\n          </InputRow>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst CreateOrgDefaultPage = () => {\n  const { parentNode, permissions: userPermissions } = useRootLayoutData();\n  const [baseIsChecked, setBaseIsChecked] = useState(true);\n  const checkPermissions = usePermissions();\n  const { ancestors } = useLoaderData<typeof loader>();\n\n  return (\n    <Modal>\n      <Form method=\"post\">\n        <div className=\"bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4 mb-5\">\n          <Modal.Title>Create Organization</Modal.Title>\n          <AdminRow\n            baseIsChecked={baseIsChecked}\n            setBaseIsChecked={setBaseIsChecked}\n            userPermissions={userPermissions}\n            orgChecked={true}\n            ancestors={ancestors}\n            parentNode={parentNode}/>\n          <InputRow>\n            <TextLabel htmlFor=\"orgName\">\n              {baseIsChecked &&\n              checkPermissions(userPermissions, RolePermissions.ADMIN)\n                ? 'Base Name: '\n                : 'Organization Name: '}\n            </TextLabel>\n            <TextInput\n              id=\"orgName\"\n              name=\"orgName\"\n              maxLength={50}\n              pattern=\"^.{3,}$\"\n              required/>\n          </InputRow>\n          <InputRow>\n            <TextLabel htmlFor=\"abbreviation\">Abbreviation:</TextLabel>\n            <TextInput id=\"abbreviation\" name=\"abbreviation\" required />\n          </InputRow>\n        </div>\n        <Modal.Buttons link=\"/org\" value=\"create\">\n          Create\n        </Modal.Buttons>\n      </Form>\n    </Modal>\n  );\n};\nexport const ErrorBoundary = ErrorReport;\nexport default CreateOrgDefaultPage;\n"],"names":["AdminRow","baseIsChecked","setBaseIsChecked","userPermissions","ancestors","parentNode","checkPermissions","usePermissions","orgIsChecked","setOrgIsChecked","useState","newParent","setNewParent","uuid","useEffect","RolePermissions","ADMIN","jsxs","className","children","InputRow","jsx","Input","Radiobox","name","label","checked","onChange","Fragment","type","value","TextLabel","htmlFor","Breadcrumbs","tree","Checkbox","CreateOrgDefaultPage","permissions","useRootLayoutData","useLoaderData","Modal","Form","method","Title","orgChecked","TextInput","id","maxLength","pattern","required","Buttons","link","ErrorBoundary","ErrorReport"],"mappings":"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"}