{"version":3,"file":"tasks._orgRoleId.edit-BlO_R9mN.js","sources":["../../../app/routes/_withNav+/_withSideBar+/tasks.$orgRoleId.edit.tsx"],"sourcesContent":["import ErrorReport from '@components/ui/ErrorReport';\nimport { Form, Input, Label } from '@components/ui';\nimport { Modal } from '@components/ui/modals';\nimport type { LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { getOrgRole } from './_manage+/.server/role.queries';\n\nexport { roleEditActionFunction as action } from './_manage+/.server/role.queries';\n\nexport const loader = async ({ params, request }: LoaderFunctionArgs) => {\n  const { orgRoleId: roleId } = params;\n\n  const orgRoleId = (new URL(request.url)).searchParams.get('orgrole');\n\n  if (!orgRoleId) {\n    throw json({ status: 'error', error: 'roleId is required.' });\n  }\n\n  const orgRole = await getOrgRole(orgRoleId);\n  return json({ orgRole });\n};\n\nconst EditOrgDefaultPage = () => {\n  const { orgRole } = useLoaderData<typeof loader>();\n\n  return (\n    <Modal>\n      <Form method=\"POST\">\n        <Modal.Body>\n          <Modal.Title>Edit Contact Info:</Modal.Title>\n          <Input.Hidden name=\"orgRoleId\" value={orgRole.uuid} />\n          <Form.Row>\n            <Label htmlFor=\"contactPhone\">Phone:</Label>\n            <Input.Text name=\"contactPhone\" defaultValue={orgRole.contactPhone} />\n          </Form.Row>\n          <Form.Row>\n            <Label htmlFor=\"contactEmail\">Email:</Label>\n            <Input.Text name=\"contactEmail\" defaultValue={orgRole.contactEmail} />\n          </Form.Row>\n        </Modal.Body>\n        <Modal.Buttons link=\"/tasks\" value=\"edit\">\n          Save\n        </Modal.Buttons>\n      </Form>\n    </Modal>\n  );\n};\nexport const ErrorBoundary = ErrorReport;\nexport default EditOrgDefaultPage;\n\n\n"],"names":["EditOrgDefaultPage","orgRole","useLoaderData","jsx","Modal","children","jsxs","Form","method","Body","Title","Input","Hidden","name","value","uuid","Row","Label","htmlFor","Text","defaultValue","contactPhone","contactEmail","Buttons","link","ErrorBoundary","ErrorReport"],"mappings":"k4BAuBMA,MAAAA,EAAqBA,IAAM,CACzB,KAAA,CAAEC,QAAAA,CAAQ,EAAIC,EAA6B,EAEjD,OACGC,EAAAA,IAAAC,EAAA,CACCC,SAACC,EAAA,KAAAC,EAAA,CAAKC,OAAO,OACXH,SAAA,CAACC,EAAAA,KAAAF,EAAMK,KAAN,CACCJ,SAAA,CAACF,EAAAA,IAAAC,EAAMM,MAAN,CAAYL,SAAkB,qBAAA,EAC/BF,EAAAA,IAACQ,EAAMC,OAAN,CAAaC,KAAK,YAAYC,MAAOb,EAAQc,KAAM,EACpDT,EAAAA,KAACC,EAAKS,IAAL,CACCX,SAAA,CAACF,EAAA,IAAAc,EAAA,CAAMC,QAAQ,eAAeb,SAAM,SAAA,EACpCF,EAAAA,IAACQ,EAAMQ,KAAN,CAAWN,KAAK,eAAeO,aAAcnB,EAAQoB,YAAc,CAAA,CAAA,EACtE,EACAf,EAAAA,KAACC,EAAKS,IAAL,CACCX,SAAA,CAACF,EAAA,IAAAc,EAAA,CAAMC,QAAQ,eAAeb,SAAM,SAAA,EACpCF,EAAAA,IAACQ,EAAMQ,KAAN,CAAWN,KAAK,eAAeO,aAAcnB,EAAQqB,YAAc,CAAA,CAAA,CACtE,CAAA,CAAA,EACF,EACAnB,EAAAA,IAACC,EAAMmB,QAAN,CAAcC,KAAK,SAASV,MAAM,OAAOT,SAE1C,MAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EACaoB,EAAgBC"}