{"version":3,"file":"Modal-BilbC_tq.js","sources":["../../../app/components/ui/modals/Modal.tsx"],"sourcesContent":["import { Dialog, DialogPanel, DialogTitle, Transition, TransitionChild } from '@headlessui/react';\nimport { useNavigate, useSearchParams } from '@remix-run/react';\nimport type { RefProp } from 'node_modules/@headlessui/react/dist/utils/render';\nimport type { Ref } from 'react';\nimport React, { forwardRef } from 'react';\nimport { ModalCancelBtn } from '../Buttons';\n\ntype ModalFnProps = {\n  open?: boolean;\n  onClose?: () => void;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nfunction ModalFn(\n  { children, open=true, onClose }: ModalFnProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const navigate = useNavigate();\n  const handleOnClose = () => {\n    if (onClose) {\n      onClose();\n    }\n    else {\n      navigate(-1);\n    }\n  };\n  \n  return (\n    <Transition show={true} as={React.Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"relative z-10\"\n        open={open}\n        onClose={handleOnClose}\n        ref={ref}>\n        {/* <TransitionChild\n          as={React.Fragment}\n          enter=\"ease-in duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\">\n          \n        </TransitionChild> */}\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75\" />\n        <div className=\"fixed inset-0 z-10 w-screen overflow-y-auto\">\n          <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n            {/* <TransitionChild\n              as={React.Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\n              \n            </TransitionChild> */}\n            <DialogPanel className=\"relative transform rounded-lg bg-white text-left shadow-xl sm:my-8 sm:w-full sm:max-w-lg\">\n              {children}\n            </DialogPanel>\n          </div>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n\ntype DialogBodyFnProps = React.HTMLAttributes<HTMLDivElement> & {\n  children: React.ReactNode;\n}\n\ntype DialogBodyFnRef = Ref<HTMLDivElement>\n\nconst DialogBodyFn = (props: DialogBodyFnProps, ref: DialogBodyFnRef) => (\n  <div ref={ref} className=\"bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4 mb-5\">\n    {props.children}\n  </div>\n);\n\ntype DialogTitleFnProps = RefProp<typeof DialogTitle> & {\n  className?: string;\n  children: React.ReactNode;\n};\n\ntype DialogTitleFnRef = Ref<HTMLHeadingElement>;\n\nconst DialogTitleFn = ({ className: userStyles, ...props }: DialogTitleFnProps, ref: DialogTitleFnRef) => {\n  // const { className, ...props } = props;\n  let styles = 'text-base rounded-t-lg font-semibold leading-6 text-gray-900 mb-3';\n  if (userStyles) {\n    styles = userStyles + ' ' + styles;\n  }\n  \n  return (\n    <DialogTitle\n      {...props}\n      ref={ref}\n      as=\"h3\"\n      className={styles}>\n      {props.children}\n    </DialogTitle>\n  );\n};\n\ntype ButtonsFnProps = {\n  hideCancelBtn?: boolean;\n  navigateToUrl?: string | number;\n  variant?: 'solid' | 'outline';\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\ntype ButtonsFnRef = React.ForwardedRef<HTMLButtonElement>;\n\n\nconst ButtonsFn = (allProps: ButtonsFnProps, ref: ButtonsFnRef) => {\n  let { hideCancelBtn, navigateToUrl, type, variant = 'solid', ...props } = allProps;\n  if (!navigateToUrl) navigateToUrl = -1;\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n\n  function performNavigate() {\n    if(typeof navigateToUrl === 'string') {\n      searchParams.delete('type');\n      navigate({\n        pathname: navigateToUrl,\n        search: searchParams.toString(),\n      });\n    } else {\n      navigate(navigateToUrl ?? -1);\n    }\n  }\n\n  function handleModalCancel() {\n    performNavigate();\n  }\n\n  function handleClick() {\n    if (type === 'button') {\n      performNavigate();\n    }\n  }\n\n  const baseStyles = 'inline-flex w-full justify-center rounded-md px-3 py-2 text-sm font-semibold shadow-sm disabled:cursor-not-allowed sm:ml-3 sm:w-auto';\n  let solidClasses = 'bg-green-600 hover:bg-green-500 disabled:bg-green-400 text-white';\n  let outlineClasses = 'text-green-600 hover:text-white border border-green-600 hover:bg-green-500 disabled:bg-neutral-400';\n  let classes = '';\n\n  if (props.value === 'delete') {\n    solidClasses = 'bg-red-600 text-white hover:bg-red-500 disabled:bg-red-400';\n    outlineClasses = 'outline-red-600 hover:bg-red-500';\n  }\n\n  if (variant === 'outline') {\n    classes = baseStyles + ' ' + outlineClasses;\n  } else if (variant === 'solid') {\n    classes = baseStyles + ' ' + solidClasses;\n  }\n\n  return (\n    <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n      <button\n        {...props}\n        ref={ref}\n        type={type}\n        onClick={handleClick}\n        name={props.name ?? '_action'}\n        className={classes}/>\n      <Transition show={!hideCancelBtn}>\n        <ModalCancelBtn onClick={handleModalCancel}>Cancel</ModalCancelBtn>\n      </Transition>\n    </div>\n  );\n};\n\nexport let Modal = Object.assign(forwardRef(ModalFn), {\n  Title: forwardRef(DialogTitleFn),\n  Body: forwardRef(DialogBodyFn),\n  Buttons: forwardRef(ButtonsFn),\n});\n"],"names":["ModalFn","children","open","onClose","ref","navigate","useNavigate","handleOnClose","Transition","React","jsxs","Dialog","jsx","DialogPanel","DialogBodyFn","props","DialogTitleFn","userStyles","styles","DialogTitle","ButtonsFn","allProps","hideCancelBtn","navigateToUrl","type","variant","searchParams","useSearchParams","performNavigate","handleModalCancel","handleClick","baseStyles","solidClasses","outlineClasses","classes","ModalCancelBtn","Modal","forwardRef"],"mappings":"6kBAYA,SAASA,EACP,CAAE,SAAAC,EAAU,KAAAC,EAAK,GAAM,QAAAC,GACvBC,EACA,CACA,MAAMC,EAAWC,EAAY,EACvBC,EAAgB,IAAM,CACtBJ,EACMA,EAAA,EAGRE,EAAS,EAAE,CAEf,EAEA,aACGG,EAAW,CAAA,KAAM,GAAM,GAAIC,EAAM,SAChC,SAAAC,EAAA,KAACC,EAAA,CACC,GAAG,MACH,UAAU,gBACV,KAAAT,EACA,QAASK,EACT,IAAAH,EAWA,SAAA,CAACQ,EAAAA,IAAA,MAAA,CAAI,UAAU,yCAA0C,CAAA,EACxDA,MAAA,MAAA,CAAI,UAAU,8CACb,eAAC,MAAI,CAAA,UAAU,kFAWb,SAAAA,EAAAA,IAACC,EAAY,CAAA,UAAU,2FACpB,SAAAZ,CAAA,CACH,EACF,CACF,CAAA,CAAA,CAAA,CAAA,EAEJ,CAEJ,CAQA,MAAMa,EAAe,CAACC,EAA0BX,IAC9CQ,EAAAA,IAAC,OAAI,IAAAR,EAAU,UAAU,8CACtB,SAAAW,EAAM,QACT,CAAA,EAUIC,EAAgB,CAAC,CAAE,UAAWC,EAAY,GAAGF,GAA6BX,IAA0B,CAExG,IAAIc,EAAS,oEACb,OAAID,IACFC,EAASD,EAAa,IAAMC,GAI5BN,EAAA,IAACO,EAAA,CACE,GAAGJ,EACJ,IAAAX,EACA,GAAG,KACH,UAAWc,EACV,SAAMH,EAAA,QAAA,CACT,CAEJ,EAWMK,EAAY,CAACC,EAA0BjB,IAAsB,CAC7D,GAAA,CAAE,cAAAkB,EAAe,cAAAC,EAAe,KAAAC,EAAM,QAAAC,EAAU,QAAS,GAAGV,GAAUM,EACrEE,IAA+BA,EAAA,IACpC,MAAMlB,EAAWC,EAAY,EACvB,CAACoB,CAAY,EAAIC,EAAgB,EAGvC,SAASC,GAAkB,CACtB,OAAOL,GAAkB,UAC1BG,EAAa,OAAO,MAAM,EACjBrB,EAAA,CACP,SAAUkB,EACV,OAAQG,EAAa,SAAS,CAAA,CAC/B,GAEDrB,EAASkB,GAAiB,EAAE,CAC9B,CAGF,SAASM,GAAoB,CACXD,EAAA,CAAA,CAGlB,SAASE,GAAc,CACjBN,IAAS,UACKI,EAAA,CAClB,CAGF,MAAMG,EAAa,uIACnB,IAAIC,EAAe,mEACfC,EAAiB,qGACjBC,EAAU,GAEV,OAAAnB,EAAM,QAAU,WACHiB,EAAA,6DACEC,EAAA,oCAGfR,IAAY,UACdS,EAAUH,EAAa,IAAME,EACpBR,IAAY,UACrBS,EAAUH,EAAa,IAAMC,GAI7BtB,EAAA,KAAC,MAAI,CAAA,UAAU,2DACb,SAAA,CAAAE,EAAA,IAAC,SAAA,CACE,GAAGG,EACJ,IAAAX,EACA,KAAAoB,EACA,QAASM,EACT,KAAMf,EAAM,MAAQ,UACpB,UAAWmB,CAAA,CAAQ,EACrBtB,EAAAA,IAACJ,EAAW,CAAA,KAAM,CAACc,EACjB,eAACa,EAAe,CAAA,QAASN,EAAmB,SAAA,QAAM,CAAA,CACpD,CAAA,CAAA,EACF,CAEJ,EAEO,IAAIO,EAAQ,OAAO,OAAOC,EAAA,WAAWrC,CAAO,EAAG,CACpD,MAAOqC,aAAWrB,CAAa,EAC/B,KAAMqB,aAAWvB,CAAY,EAC7B,QAASuB,aAAWjB,CAAS,CAC/B,CAAC"}