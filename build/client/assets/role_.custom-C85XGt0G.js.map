{"version":3,"file":"role_.custom-C85XGt0G.js","sources":["../../../app/routes/_withNav+/_withSideBar+/_manage+/role_.custom.tsx"],"sourcesContent":["import { DeleteButton } from '@components/ui/Buttons';\nimport ErrorReport from '@components/ui/ErrorReport';\nimport { Attribute, isPrismaKnownError } from '@lib/utils';\nimport type { Role } from '@prisma/client';\nimport { RoleLevel } from '@prisma/client';\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useFetcher, useLoaderData } from '@remix-run/react';\nimport { requireUser } from '@services/user.server';\nimport { AuthorizationError } from 'remix-auth';\nimport { jsonWithError, jsonWithSuccess } from 'remix-toast';\nimport z, { ZodError } from 'zod';\nimport { deleteCustomRole, getCustomRoles } from './.server/role.queries';\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  await requireUser(request, { permissions: Attribute.ROLES_READWRITE });\n  const customRoles = await getCustomRoles();\n\n  return json({ customRoles });\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const deleteSchema = z.object({\n    roleId: z.string(),\n    _action: z.literal('delete'),\n  });\n\n  try {\n    await requireUser(request, { permissions: Attribute.ROLES_READWRITE });\n    const { roleId, _action } = deleteSchema.parse(\n      Object.fromEntries((await request.formData()).entries())\n    );\n\n    if (_action === 'delete') {\n      await deleteCustomRole(roleId);\n      return jsonWithSuccess({ status: 'success' }, 'Role Deleted!');\n    } else {\n      throw new Error('Action not supported.');\n    }\n  } catch (e) {\n    console.error(e);\n    if (e instanceof AuthorizationError) {\n      return jsonWithError(\n        { status: 'error', message: 'User is not authorized.' },\n        'User is not authorized.'\n      );\n    }\n    if (isPrismaKnownError(e)) {\n      if (e.code === 'P2003')\n        return jsonWithError(\n          {\n            status: 'error',\n            message: 'There are still organizational roles linked.',\n          },\n          'There are still organizational roles linked.'\n        );\n    } else if (e instanceof ZodError) {\n      return jsonWithError(\n        {\n          status: 'error',\n          message: 'There was a validation error.',\n          issues: e.issues,\n        },\n        'There was an error.'\n      );\n    } else if (e instanceof Error) {\n      return jsonWithError(\n        { status: 'error', message: 'There was an error.' },\n        'There was an error.'\n      );\n    }\n  }\n}\nconst ManageRoles = () => {\n  const { customRoles } = useLoaderData<typeof loader>();\n  const deleteFetcher = useFetcher();\n  return (\n    <>\n      <h1 className=\"text-2xl mb-6\">Manage Roles</h1>\n      <div>\n        {customRoles.length > 0 ? (\n          <table className=\"text-left table-auto w-full border-neutral-300 border-1\">\n            <thead>\n              <tr className=\"border-b border-black\">\n                <th className=\"text-left pl-3\">Name</th>\n                <th>Abbreviation</th>\n                <th>Description</th>\n                <th>Level</th>\n                <th>Created By Organization</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {customRoles.map((role: Role) => (\n                <tr key={role.uuid} className=\"table-row border-b\">\n                  <td className=\"pl-3 py-4\">{role.name}</td>\n                  <td>{role.abbreviation}</td>\n                  <td>{role.description}</td>\n                  <td>\n                    {role.level === RoleLevel.BASE && 'Base'}\n                    {role.level === RoleLevel.UNIT && 'Unit'}\n                  </td>\n                  <td>{role.createdByOrg.name}</td>\n                  <td className=\"text-right pr-5\">\n                    <deleteFetcher.Form method=\"POST\">\n                      <input type=\"hidden\" name=\"roleId\" value={role.uuid} />\n                      <DeleteButton type=\"submit\" value=\"delete\" name=\"_action\">\n                        Delete\n                      </DeleteButton>\n                    </deleteFetcher.Form>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          'No Custom Roles to edit.'\n        )}\n      </div>\n    </>\n  );\n};\nexport const ErrorBoundary = ErrorReport;\nexport default ManageRoles;\n"],"names":["ManageRoles","customRoles","useLoaderData","deleteFetcher","useFetcher","jsxs","Fragment","children","jsx","className","length","map","role","name","abbreviation","description","level","RoleLevel","BASE","UNIT","createdByOrg","Form","method","type","value","uuid","DeleteButton","ErrorBoundary","ErrorReport"],"mappings":"koBAyEMA,MAAAA,EAAcA,IAAM,CAClB,KAAA,CAAEC,YAAAA,CAAY,EAAIC,EAA6B,EAC/CC,EAAgBC,EAAW,EACjC,OAEIC,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAA,CAACC,EAAA,IAAA,KAAA,CAAGC,UAAU,gBAAgBF,SAAY,cAAA,CAAA,EAC1CC,EAAA,IAAC,OACED,SAAYN,EAAAS,OAAS,EACnBL,EAAAA,KAAA,QAAA,CAAMI,UAAU,0DACfF,SAAA,CAAAC,EAAA,IAAC,QACC,CAAAD,SAAAF,EAAA,KAAC,KAAG,CAAAI,UAAU,wBACZF,SAAA,CAACC,EAAA,IAAA,KAAA,CAAGC,UAAU,iBAAiBF,SAAI,MAAA,CAAA,EACnCC,EAAA,IAAC,MAAGD,SAAY,cAAA,CAAA,EAChBC,EAAA,IAAC,MAAGD,SAAW,aAAA,CAAA,EACfC,EAAA,IAAC,MAAGD,SAAK,OAAA,CAAA,EACTC,EAAA,IAAC,MAAGD,SAAuB,0BAAA,QAC1B,KAAG,EAAA,CAAA,CACN,CAAA,CACF,CAAA,EACAC,EAAA,IAAC,SACED,SAAYN,EAAAU,IAAKC,GAChBP,EAAAA,KAAC,KAAmB,CAAAI,UAAU,qBAC5BF,SAAA,CAAAC,EAAA,IAAC,KAAG,CAAAC,UAAU,YAAaF,SAAAK,EAAKC,IAAK,CAAA,EACrCL,EAAA,IAAC,KAAI,CAAAD,SAAAK,EAAKE,YAAa,CAAA,EACvBN,EAAA,IAAC,KAAI,CAAAD,SAAAK,EAAKG,WAAY,CAAA,SACrB,KACE,CAAAR,SAAA,CAAKK,EAAAI,QAAUC,YAAUC,MAAQ,OACjCN,EAAKI,QAAUC,EAAA,UAAUE,MAAQ,MAAA,CACpC,CAAA,EACCX,EAAA,IAAA,KAAA,CAAID,SAAKK,EAAAQ,aAAaP,IAAK,CAAA,EAC5BL,EAAA,IAAC,MAAGC,UAAU,kBACZF,gBAACJ,EAAckB,KAAd,CAAmBC,OAAO,OACzBf,SAAA,CAAAC,EAAA,IAAC,SAAMe,KAAK,SAASV,KAAK,SAASW,MAAOZ,EAAKa,IAAM,CAAA,EACrDjB,EAAA,IAACkB,GAAaH,KAAK,SAASC,MAAM,SAASX,KAAK,UAAUN,SAE1D,QAAA,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAhBO,EAAAK,EAAKa,IAiBd,CACD,CACH,CAAA,CAAA,CAAA,CACF,EAEA,0BAEJ,CAAA,CAAA,CACF,CAAA,CAEJ,EACaE,EAAgBC"}