{"version":3,"file":"profile-6GFMijTn.js","sources":["../../../app/components/ui/forms/Password.tsx","../../../app/components/Text/PasswordRecommendation.tsx","../../../app/components/ui/forms/ProfileForm.tsx","../../../app/routes/_withNav+/_noSideBar+/profile.tsx"],"sourcesContent":["import { CheckIcon } from '@heroicons/react/24/outline';\nimport { isValidPassword, PasswordError } from '@lib/utils';\nimport type { Dispatch, SetStateAction} from 'react';\nimport { useEffect, useState } from 'react';\n\nfunction handleChange(e: React.ChangeEvent<HTMLInputElement>, setPassword: Dispatch<SetStateAction<string>>) {\n  setPassword(e.currentTarget.value);\n}\n\nexport function PasswordInput({\n  password,\n  compareTo,\n  setPassword,\n  isConfirm,\n  setIsFormValid,\n}: {\n  password: string;\n  compareTo?: string;\n  setPassword: Dispatch<SetStateAction<string>>;\n  isConfirm?: boolean;\n  setIsFormValid: Dispatch<SetStateAction<boolean>>;\n}) {\n  const [message, setMessage] = useState<string[]>([]);\n  const baseStyles =\n    'placeholder:text-black col-span-2 bg-white border-none text-gray-900 text-sm rounded-none block w-full p-2.5 focus:ring-0 focus:outline-none focus:border-transparent';\n  const [styles, setStyles] = useState(baseStyles);\n\n  const validStyles =\n    ' border border-green-500 shadow-[0_0_2px_1px_rgba(34,197,94,0.8)]';\n  const invalidStyles =\n    ' border border-red-500 shadow-[0px_0px_2px_1px_rgba(235,10,10,0.5)]';\n\n  useEffect(() => {\n    let validationErrors: PasswordError[] = [];\n    if (password) {\n      if (compareTo) {\n        validationErrors = isValidPassword(password, compareTo);\n      } else {\n        validationErrors = isValidPassword(password);\n      }\n    }\n    if (validationErrors.length === 0) {\n      setStyles(`${baseStyles} ${validStyles}`);\n      setIsFormValid(true);\n      setMessage([]);\n    } else {\n      setStyles(`${baseStyles} ${invalidStyles}`);\n      setIsFormValid(false);\n      if (validationErrors && validationErrors.length > 0) {\n        setMessage([]);\n        validationErrors.forEach((err) => {\n          switch (err) {\n            case PasswordError.Spaces:\n              if (!isConfirm)\n                setMessage((prev) => [\n                  'Password must not contain only spaces.',\n                  ...prev,\n                ]);\n              break;\n            case PasswordError.Length:\n              if (!isConfirm)\n                setMessage((prev) => [\n                  'Password must be greater than 9 characters.',\n                  ...prev,\n                ]);\n              break;\n            case PasswordError.Mismatch:\n              if (isConfirm)\n                setMessage((prev) => ['Passwords must match.', ...prev]);\n              break;\n          }\n        });\n      }\n    }\n\n    if ((password === '' && compareTo) || (compareTo === '' && password)) {\n      setStyles(`${baseStyles} ${invalidStyles}`);\n      setIsFormValid(false);\n      if (isConfirm) setMessage((prev) => ['Passwords must match.', ...prev]);\n    }\n\n    if (password === '' && compareTo === '') {\n      setIsFormValid(true);\n      setStyles(baseStyles);\n      setMessage([]);\n    }\n  }, [password, compareTo]);\n\n  return (\n    <>\n      <input\n        type=\"password\"\n        id=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={(e) => {\n          handleChange(e, setPassword);\n        }}\n        className={styles}/>\n      {message.length > 0 &&\n        message.map((msg) => <p className=\"text-red-500\">{msg}</p>)}\n    </>\n  );\n}\n","const PasswordRecommendation = () => {\n   \n  return(\n    <div className=\"w-full border rounded-xl p-5 mb-6 bg-yellow-50\">\n      <h3 className=\"text-sm font-medium text-gray-900\">Password Recommendations:</h3>\n      <ul className=\"text-sm text-gray-700 list-inside\">\n        <li>- Make sure your password is at least <strong>12 characters</strong> long to protect against brute-force attacks.</li>\n        <li>- Use a combination of <strong>uppercase letters, lowercase letters, numbers,</strong> and <strong>special characters</strong>.</li>\n        <li className=\"pl-6\"><strong>Example:</strong> {`3QQg[9mv/2>Dc5IU~}j67mID,E`}</li>\n        <li>- Avoid easily guessable information, like your name, username, or common words.</li>\n        <li>- Consider using a passphrase made up of random words or a memorable sentence.</li>\n        <li className=\"pl-6\"><strong>Example:</strong> Notice?Sent2?Creature?Waste?Cause?Car</li>\n        <li>- Always use unique passwords for each of your accounts to minimize risk.</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default PasswordRecommendation;","import { PasswordInput } from '@components/ui/forms/Password';\nimport type { AccountWithProfile } from '@lib/constants';\nimport { UserRank } from '@lib/constants';\nimport type { StringOrDate } from '@lib/types';\nimport { Form } from '@remix-run/react';\nimport ErrorReport from '../ErrorReport';\nimport React, { useState } from 'react';\nimport { UserIcon } from '@heroicons/react/24/outline';\nimport PasswordPolicy from '@components/Text/PasswordRecommendation';\n\ntype UserFormProps = {\n  account?: Omit<StringOrDate<AccountWithProfile>, 'password'>;\n  sub?: any,\n  airman?: any,\n  btnAction: 'create' | 'update';\n};\n\nconst ProfileForm = ({\n  account,\n  airman,\n  sub,\n  btnAction = 'create',\n}: UserFormProps) => {\n  const userData = account;\n  const [password, setPassword] = useState('');\n  const [confPassword, setConfPassword] = useState('');\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [activeSection, setActiveSection] = useState('personal');\n\n  const setSection = (section: any) => {\n    setActiveSection(section);\n  };\n\n  const cleanedName = userData?.name?.replace(/\\s+/g, '.');\n\n  const filteredSubordinates = userData?.id\n    ? sub.filter((subordinate: any) => subordinate.supervisorId === userData.id)\n    : [];\n\n  const filteredAirman = userData?.id\n    ? airman.filter((airman: any) => airman.sponsorId === userData.id)\n    : [];\n\n\n  return (\n    <>\n      <div className=\"flex\">\n        <div>\n\n          <div className=\"flex ml-20 mt-10 flex-col\">\n            <UserIcon className=\"size-32 p-5 bg-gray-300 rounded-full\" />\n            <div className=\"mt-4\">\n              <div className=\"font-bold text-2xl block max-w-[300px] whitespace-nowrap truncate\">{userData?.name}</div>\n              <div className=\"font-light text-lg block\">{userData?.workEmail}</div>\n            </div>\n            <div className=\"mt-14 flex flex-col gap-2 space-y-2 whitespace-nowrap\">\n\n            \n              <div>\n                <button\n                  className={`transition-all text-xl text-left hover:font-bold ${activeSection === 'organization' ? 'font-bold' : ''}`}\n                  onClick={() => setSection('organization')}>\n              Organization Information\n                </button>\n              </div>\n              <div>\n                <button\n                  className={`transition-all text-xl text-left hover:font-bold ${activeSection === 'supervisor' ? 'font-bold' : ''}`}\n                  onClick={() => setSection('supervisor')}>\n              Supervisors & Sponsors\n                </button>\n              </div>\n              <div>\n                <button\n                  className={`transition-all text-xl text-left hover:font-bold ${activeSection === 'questions' ? 'font-bold' : ''}`}\n                  onClick={() => setSection('questions')}>\n              Account Questions\n                </button>\n              </div>\n              <div>\n                <button\n                  className={`transition-all text-xl text-left hover:font-bold ${activeSection === 'password' ? 'font-bold' : ''}`}\n                  onClick={() => setSection('password')}>\n              Account Password\n                </button>\n              </div>\n              <div>\n                <button\n                  className={`transition-all text-xl text-left hover:font-bold ${activeSection === 'settings' ? 'font-bold' : ''}`}\n                  onClick={() => setSection('settings')}>\n              Account Details\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <Form\n            method=\"post\"\n            className=\"p-8 mt-10 flex flex-col 2xl:w-[1200px]\"\n            id=\"registerForm\">\n            {userData?.id && (\n              <input type=\"hidden\" name=\"userId\" value={userData.id} />\n            )}\n\n            <div>\n              {activeSection === 'personal' && (\n                <div className=\"grid grid-cols-2 gap-10\">\n\n                  <div className=\"border rounded-xl p-5\">\n                    <label className=\"block text-sm font-medium text-black mb-4\">\n                    Select Rank\n                    </label>\n                    <select\n                      name=\"rank\"\n                      defaultValue={userData?.rank}\n                      className=\"transition-all border border-white text-gray-900 text-sm block w-full p-0 focus:outline-none focus:ring-0 focus:border-transparent\">\n                      {Object.entries(UserRank).map((item, index) => (\n                        <option key={`${index}-${item[0]}`} value={item[0]}>\n                          {item[1].name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>           \n                  <div className=\"border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"name\"\n                      className=\"block text-sm font-medium text-gray-900 dark:text-black mb-4\">\n                    Full Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      defaultValue={userData?.name}\n                      className=\"placeholder:text-zinc-500 bg-white border border-white text-gray-900 text-sm block w-full p-0 focus:ring-0 focus:outline-none focus:border-transparent\"\n                      required={true}/>\n                  </div>\n\n              \n          \n                </div>\n              )}\n\n              {activeSection === 'organization' && (\n                <div className=\"grid grid-cols-2 gap-10\">\n\n                  <div className=\"border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"email\"\n                      className=\"block text-sm font-medium text-gray-900 dark:text-black mb-4\">\n                      Official Email address\n                    </label>\n                    <input\n                      type=\"email\"\n                      id=\"workEmail\"\n                      name=\"workEmail\"\n                      defaultValue={userData?.workEmail ?? ''}\n                      className=\"border-none text-gray-900 text-sm block w-full p-0 focus:ring-0 focus:outline-none focus:border-transparent\"\n                      required={true}/>\n                  </div>\n\n                  <div className=\"border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"text\"\n                      className=\"block text-sm font-medium text-gray-900 dark:text-black mb-4\">\n                      Current Organization\n                    </label>\n                    <label\n                      className=\"border-none text-black text-sm block w-full p-0 focus:ring-0 focus:outline-none focus:border-transparent\">\n                      {userData?.currentOrg.name ?? ''}\n                    </label>\n                  </div>\n\n                  <div className=\"border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"phone\"\n                      className=\"block text-sm font-medium text-gray-900 dark:text-black mb-4\">\n                      Work Phone number <span className=\"text-sm\" />\n                    </label>\n                    <input\n                      type=\"tel\"\n                      id=\"workPhone\"\n                      name=\"workPhone\"\n                      defaultValue={userData?.workPhone ?? ''}\n                      placeholder=\"000-000-0000\"\n                      className=\"border-none text-gray-900 text-sm block w-full p-0 focus:ring-0 focus:outline-none focus:border-transparent\"\n                      pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"/>\n                  </div>\n                </div>\n              )}\n\n              {activeSection === 'supervisor' && (\n                <div>\n                  {userData && (\n                    <>\n                      <div className=\"grid grid-cols-2 gap-10\">\n                        <div>\n                          <div className=\"border rounded-xl p-5 mb-10\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 flex gap-2\">\n                              Supervisor Rank: <p className=\"font-normal\">{userData?.supervisor?.rank ?? ''}</p>\n                            </label>\n                          </div>\n\n                          <div className=\"border rounded-xl p-5 mb-10\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 flex gap-2\">\n                              Supervisor Name: <p className=\"font-normal\">{userData?.supervisor?.name ?? ''}</p>\n                            </label>\n                          </div>\n\n                          <div className=\"border rounded-xl p-5 mb-10\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 flex gap-2\">\n                              Supervisor Email: <p className=\"font-normal\">{userData?.supervisor?.workEmail ?? ''}</p>\n                            </label>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"border rounded-xl p-5 mb-10\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 flex gap-2\">\n                              Sponsor Rank: <p className=\"font-normal\">{userData?.sponsor?.rank ?? ''}</p>\n                            </label>\n                          </div>\n\n                          <div className=\"border rounded-xl p-5 mb-10\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 flex gap-2\">\n                              Sponsor Name:<p className=\"font-normal\">{userData?.sponsor?.name ?? ''}</p>\n                            </label>\n                          </div>\n\n                          <div className=\"border rounded-xl p-5 mb-10\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 flex gap-2\">\n                              Sponsor Email: <p className=\"font-normal\">{userData?.sponsor?.workEmail ?? ''}</p>\n                            </label>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"border rounded-xl p-5\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 gap-2\">\n                              Subordinates: <p className=\"font-normal\">\n                                <div className=\"text-center max-w-full mt-4 overflow-hidden\">\n                                  {filteredSubordinates ? (\n                                    <table className=\"w-full\">\n                                      <tbody>\n                                        {filteredSubordinates.map((sub) => (\n                                          <tr key={sub.id}>\n                                            <td className=\"px-4\">{sub.rank}</td>\n                                            <td\n                                              className=\"px-4 max-w-[250px] whitespace-nowrap truncate\"\n                                              title={sub.name}>\n                                              {sub.name}\n                                            </td>\n                                            <td\n                                              className=\"px-4 max-w-[200px] whitespace-nowrap truncate\"\n                                              title={sub.workEmail}>\n                                              {sub.workEmail}\n                                            </td>\n                                          </tr>\n                                        ))}\n                                      </tbody>\n                                    </table>\n                                  ) : (\n                                    <p>No subordinates are assigned to you.</p>\n                                  )}\n                                </div>\n\n                              </p>\n                            </label>\n                          </div>\n                        </div>\n\n                        <div>\n                          <div className=\"border rounded-xl p-5 mb-10\">\n                            <label\n                              className=\"mb-2 text-sm font-medium text-gray-900 gap-2\">\n                              Incoming Airman: <p className=\"font-normal\">\n                                <div className=\"text-center max-w-full mt-4 overflow-hidden\">\n                                  {filteredAirman ? (\n                                    <table className=\"w-full\">\n                                      <tbody>\n                                        {filteredAirman.map((airman) => (\n                                          <tr key={airman.id}>\n                                            <td className=\"px-4\">{airman.rank}</td>\n                                            <td\n                                              className=\"px-4 max-w-[250px] whitespace-nowrap truncate\"\n                                              title={airman.name}>\n                                              {airman.name}\n                                            </td>\n                                            <td\n                                              className=\"px-4 max-w-[200px] whitespace-nowrap truncate\"\n                                              title={airman.workEmail}>\n                                              {airman.workEmail}\n                                            </td>\n                                          </tr>\n                                        ))}\n                                      </tbody>\n                                    </table>\n                                  ) : (\n                                    <p>No subordinates are assigned to you.</p>\n                                  )}\n                                </div>\n                              </p>\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n\n                    </>\n                  )}\n                </div>\n              )}\n                \n              {activeSection === 'questions' && (\n                <div>\n                  <div className=\"grid grid-cols-2 gap-10\">\n\n                    <div className=\"border rounded-xl p-5\">\n                      <h1>Are you currently a dorm resident?</h1>\n                      <input\n                        type=\"radio\"\n                        id=\"contactChoice1\"\n                        defaultChecked={userData?.isDormResident ?? false}\n                        value={'true'}\n                        name=\"isDormResident\"/>\n                      <label className=\"ml-1\" htmlFor=\"contactChoice1\">\n                        Yes\n                      </label>\n                      <input\n                        className=\"ml-3\"\n                        type=\"radio\"\n                        id=\"contactChoice2\"\n                        defaultChecked={!userData?.isDormResident}\n                        value={'false'}\n                        name=\"isDormResident\"/>\n                      <label className=\"ml-1\" htmlFor=\"contactChoice2\">\n                        No\n                      </label>\n                    </div>\n\n                    <div className=\"border rounded-xl p-5\">\n                      <h1>Do you currently have any dependents?</h1>\n                      <input\n                        type=\"radio\"\n                        id=\"contactChoice3\"\n                        defaultChecked={userData?.hasDependents ?? false}\n                        value={'true'}\n                        name=\"hasDependents\"/>\n                      <label className=\"ml-1\" htmlFor=\"contactChoice3\">\n                        Yes\n                      </label>\n                      <input\n                        className=\"ml-3\"\n                        type=\"radio\"\n                        defaultChecked={!userData?.hasDependents}\n                        value={'false'}\n                        id=\"contactChoice4\"\n                        name=\"hasDependents\"/>\n                      <label className=\"ml-1\" htmlFor=\"contactChoice4\">\n                        No\n                      </label>\n                    </div>\n\n                    <div className=\"border rounded-xl p-5\">\n                      <h1>\n                        Is any member of your family enrolled in the Exceptional Family\n                        Member Program (EFMP)?*\n                      </h1>\n                      <div className=\"text-xs mb-1\">\n                        <p>\n                          *Service members on active duty enroll in the program if they\n                          have a Family member with a physical, emotional, developmental,\n                          or intellectual disorder requiring specialized services so their\n                          needs can be considered in the military personnel assignment\n                          process.\n                        </p>\n                      </div>\n                      <input\n                        type=\"radio\"\n                        id=\"contactChoice7\"\n                        defaultChecked={userData?.hasEFMP ?? false}\n                        value={'true'}\n                        name=\"hasEFMP\"/>\n                      <label className=\"ml-1\" htmlFor=\"contactChoice7\">\n                        Yes\n                      </label>\n                      <input\n                        className=\"ml-3\"\n                        type=\"radio\"\n                        id=\"contactChoice8\"\n                        defaultChecked={!userData?.hasEFMP}\n                        value={'false'}\n                        name=\"hasEFMP\"/>\n                      <label className=\"ml-1\" htmlFor=\"contactChoice8\">\n                        No\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {activeSection === 'password' && (\n                <div className=\"flex flex-col items-center\">\n                  <PasswordPolicy/>\n                  <div className=\"w-full border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"password\"\n                      className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                      New Password\n                    </label>\n                    <PasswordInput\n                      password={password}\n                      setPassword={setPassword}\n                      compareTo={confPassword}\n                      setIsFormValid={setIsFormValid}/>\n                  </div>\n              \n                  <div className=\"w-full border rounded-xl mt-10 p-5\">\n                    <label\n                      htmlFor=\"confirmPassword\"\n                      className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                      Confirm New Password\n                    </label>\n                    <PasswordInput\n                      password={confPassword}\n                      setPassword={setConfPassword}\n                      compareTo={password}\n                      isConfirm={true}\n                      setIsFormValid={setIsFormValid}/>\n                  </div>\n                </div>\n              \n              \n              )}\n\n              {activeSection === 'settings' && (\n                <div className=\"grid grid-cols-2 gap-10\">\n\n                  <div className=\"w-full border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"password\"\n                      className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                      Rownd Account Id: <p className=\"font-normal\">{userData?.accountId ?? ''}</p>\n                    </label>\n                  </div>\n\n                  <div className=\"w-full border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"confirmPassword\"\n                      className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                      User Id: <p className=\"font-normal\">{userData?.id ?? ''}</p>\n                    </label>\n                  </div>\n\n                  <div className=\"w-full border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"confirmPassword\"\n                      className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                      Current Organization Id: <p className=\"font-normal\">{userData?.currentOrg?.uuid ?? ''}</p>\n                    </label>\n                  </div>\n\n                  <div className=\"w-full border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"confirmPassword\"\n                      className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                      Supervisor Id: <p className=\"font-normal\">{userData?.supervisor?.id ?? ''}</p>\n                    </label>\n                  </div>\n\n                  <div className=\"w-full border rounded-xl p-5\">\n                    <label\n                      htmlFor=\"confirmPassword\"\n                      className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                      Sponsor Id: <p className=\"font-normal\">{userData?.sponsor?.id ?? ''}</p>\n                    </label>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {activeSection !== 'settings' && activeSection !== 'supervisor' &&(\n              <div className=\"flex flex-col mt-10\">\n                <button\n                  name=\"_action\"\n                  value={btnAction}\n                  type=\"submit\"\n                  disabled={!isFormValid}\n                  className=\"mb-3 text-white bg-gray-800 hover:bg-gray-600 disabled:bg-slate-400 disabled:cursor-not-allowed font-medium rounded-lg text-sm sm:w-auto h-full py-2.5 text-center\">\n                Submit\n                </button>\n              </div>\n            )}\n          </Form>\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nexport const ErrorBoundary = ErrorReport;\nexport default ProfileForm;","import ErrorReport from '@components/ui/ErrorReport';\nimport ProfileForm from '@components/ui/forms/ProfileForm';\nimport { isValidPassword } from '@lib/utils';\nimport { Rank } from '@prisma/client';\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport {\n  getAccount,\n  updateProfile,\n} from './.server/profile.queries';\nimport { requireUser } from '@services/user.server';\nimport React from 'react';\nimport {\n  jsonWithError,\n  jsonWithSuccess,\n} from 'remix-toast';\nimport type { ZodTypeAny } from 'zod';\nimport z, { ZodError } from 'zod';\nimport { getSponsors, getSubordinates } from '../_withSideBar+/_manage+/.server/org.queries';\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n\n  const userId = await requireUser(request);\n  //const { workEmail } = await getUser(userId);\n  const account = await getAccount(userId);\n  const subordinates = await getSubordinates(account.currentOrg.uuid);\n  const sponsor = await getSponsors(userId);\n  return json({ account, subordinates, sponsor }, {\n    headers: {\n      'Content-Security-Policy': 'frame-ancestors: none',\n      'X-Frame-Options': 'SAMEORIGIN',\n    },\n  });\n};\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  const zodRadioButton: [ZodTypeAny, ZodTypeAny, ...ZodTypeAny[]] = [\n    z.literal('true').transform(() => true),\n    z.literal('false').transform(() => false),\n  ];\n  const updateSchema = z.object({\n    userId: z.string(),\n    name: z.string().optional(),\n    personalPhone: z.string().nullable().optional(),\n    workPhone: z.string().nullable().optional(),\n    workEmail: z.string().email().optional(),\n    personalEmail: z.string().optional(),\n    hasDependents: z.union(zodRadioButton).optional(),\n    isDormResident: z.union(zodRadioButton).optional(),\n    hasEFMP: z.union(zodRadioButton).optional(),\n    // sponsorReach: z.union(zodRadioButton),\n    password: z.string().optional().refine((val) => {if (val) return isValidPassword(val); else return true;}, {message: 'Not a valid password'}),\n    confirmPassword: z.string().optional().refine((val) => {if (val) return isValidPassword(val); else return true;} ),\n    rank: z.nativeEnum(Rank).optional(),\n    // dodId: z.string().min(10).max(10),\n    // sponsor: z.string().optional(),\n    // supervisor: z.string().optional(),\n  });\n\n  try {\n    const data = updateSchema.parse(Object.fromEntries((await request.formData()).entries()));\n    if (data.password){\n      if (!isValidPassword(data.password, data.confirmPassword))\n        return jsonWithError( {status: 'error'}, 'There was a validation error.');\n    }\n    await updateProfile(data.userId, data);\n    return jsonWithSuccess( { status: 'ok' }, 'Profile Saved!');\n\n\n  } catch (e) {\n    console.error(e);\n    if (e instanceof Error) {\n      if (e instanceof ZodError) return jsonWithError({ status: 'error', message: 'There was a validation error.', issues: e.issues }, 'There was a validation error.');\n      return jsonWithError({ status: 'error', error: e }, 'There was an error.');\n    }\n  }\n};\n\nconst ChecklistIndex = () => {\n  const { account, subordinates, sponsor } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <ProfileForm\n        account={account}\n        sub={subordinates}\n        airman={sponsor}\n        btnAction=\"update\" />\n    </>\n  );\n};\n\nexport const ErrorBoundary = ErrorReport;\nexport default ChecklistIndex;\n"],"names":["handleChange","e","setPassword","PasswordInput","password","compareTo","isConfirm","setIsFormValid","message","setMessage","useState","baseStyles","styles","setStyles","validStyles","invalidStyles","useEffect","validationErrors","isValidPassword","err","PasswordError","prev","jsxs","Fragment","jsx","msg","PasswordRecommendation","ProfileForm","account","airman","sub","btnAction","userData","confPassword","setConfPassword","isFormValid","activeSection","setActiveSection","setSection","section","_a","filteredSubordinates","subordinate","filteredAirman","UserIcon","Form","UserRank","item","index","_b","_c","_d","_e","_f","_g","PasswordPolicy","_h","_i","_j","ChecklistIndex","subordinates","sponsor","useLoaderData","children","ErrorBoundary","ErrorReport"],"mappings":"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"}