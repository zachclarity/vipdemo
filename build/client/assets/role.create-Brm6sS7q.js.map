{"version":3,"file":"role.create-Brm6sS7q.js","sources":["../../../app/routes/_withNav+/_withSideBar+/_manage+/role.create.tsx"],"sourcesContent":["import ErrorReport from '@components/ui/ErrorReport';\nimport { Checkbox, InputRow, TextInput, TextLabel } from '@components/ui/Input';\nimport { Modal } from '@components/ui/modals';\nimport { Attribute } from '@lib/utils';\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { Form, useLoaderData, useOutletContext } from '@remix-run/react';\nimport { requireUser, requireUserAsObject } from '@services/user.server';\nimport React, { useState } from 'react';\nimport { AuthorizationError } from 'remix-auth';\nimport { jsonWithError, redirectWithSuccess } from 'remix-toast';\nimport type { ZodTypeAny } from 'zod';\nimport z, { ZodError } from 'zod';\nimport {\n  createOrgRole,\n  createOrgRoleWithRole,\n  findRolesNotAssigned,\n} from './.server/role.queries';\nimport { getOrgBeingViewed } from './.server/org.queries';\nimport useIsAdmin from '@lib/hooks/useIsAdmin';\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const { currentOrg: org, roles: userRoles } = await requireUserAsObject(request, {\n    permissions: Attribute.ORGROLES_READWRITE,\n  });\n\n  let orgId;\n\n  const orgIdParam = new URL(request.url).searchParams.get('org');\n\n  if (!orgIdParam) {\n    ({ uuid: orgId } = org);\n  } else {\n    orgId = orgIdParam;\n  }\n\n  const {orgBeingViewed: orgs} = await getOrgBeingViewed({defaultOrgId: org.uuid, searchParams: new URL(request.url).searchParams});\n  const roles = await findRolesNotAssigned(orgId, orgs.isWingLevel);\n\n  return json({\n    orgId,\n    roles,\n    userRoles,\n  });\n};\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const zodRadioButton: [ZodTypeAny, ZodTypeAny, ...ZodTypeAny[]] = [\n    z.literal('on').transform(() => true),\n    z.literal('off').transform(() => false),\n  ];\n\n  const createOrgRoleSchema = z.object({\n    contactPhone: z.string().min(3).max(80),\n    contactEmail: z.string().min(3),\n    organizationId: z.string().min(3),\n    roleId: z.string().optional(),\n    _action: z.string(),\n    roleName: z.string().optional(),\n    baseAgency: z.union(zodRadioButton).optional(),\n    roleDescription: z.string().optional(),\n    roleAbbreviation: z.string().refine((val: string) => !(val === 'ADMIN' || val === 'SUPERADMIN' || val === 'USER'), { message: 'Abbreviation cannot be ADMIN or SUPERADMIN.'}).optional(),\n  });\n\n  try {\n    await requireUser(request, {\n      options: {\n        redirectOnFailure: false,\n      },\n      permissions: Attribute.ORGROLES_READWRITE,\n    });\n\n    const {\n      contactPhone,\n      contactEmail,\n      organizationId,\n      roleId,\n      _action,\n      roleName,\n      baseAgency,\n      roleAbbreviation,\n      roleDescription,\n    } = createOrgRoleSchema.parse(\n      Object.fromEntries((await request.formData()).entries())\n    );\n\n    if (_action === 'link' && roleId)\n      await createOrgRole({\n        contactPhone,\n        contactEmail,\n        organizationId,\n        roleId,\n      });\n    if (_action === 'add' && roleName && roleDescription && roleAbbreviation) {\n      // add the role and link\n      await createOrgRoleWithRole({\n        roleName,\n        roleAbbreviation,\n        roleDescription,\n        contactPhone,\n        contactEmail,\n        organizationId,\n        baseAgency,\n      });\n    }\n\n    return redirectWithSuccess(\n      `/role?org=${organizationId}`,\n      'Role Added!'\n    );\n  } catch (e) {\n    console.error(e);\n\n    if (e instanceof Error) {\n      if (e instanceof AuthorizationError) {\n        return jsonWithError(\n          { status: 'error', error: 'Authorization Error.' },\n          'User is not authorized.'\n        );\n      }\n      if (e instanceof ZodError) {\n        return jsonWithError(\n          { status: 'error', message: 'validation error', errors: e.errors },\n          'There was an error adding the role.'\n        );\n      }\n      return jsonWithError(\n        { status: 'error', message: e.message },\n        'There was an error adding the role.'\n      );\n    }\n  }\n}\n\nconst CreateRoleDefaultPage = () => {\n  const { roles, orgId, userRoles } = useLoaderData<typeof loader>();\n  const {orgBeingViewed} = useOutletContext();\n  const [isAddRole, setIsAddRole] = useState(roles.length === 0);\n  const {isAdmin} = useIsAdmin(userRoles);\n  const [submitBtnAction, setSubmitBtnAction] = useState(\n    roles.length === 0 ? 'add' : 'link'\n  );\n\n  const selectChangeHandler = (val: number | string) => {\n    if (val === 'add') {\n      setIsAddRole(true);\n      setSubmitBtnAction('add');\n    } else {\n      setIsAddRole(false);\n      setSubmitBtnAction('link');\n    }\n  };\n\n  return (\n    <Modal>\n      <Form method=\"post\">\n        <div className=\"bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4 mb-5\">\n          <Modal.Title>Create Organization Role</Modal.Title>\n          <input type=\"hidden\" name=\"organizationId\" value={orgId} />\n          <InputRow>\n            <TextLabel htmlFor=\"roleId\">Role to Link:</TextLabel>\n            <select\n              name=\"roleId\"\n              id=\"roleId\"\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50\"\n              onChange={(e) => {\n                selectChangeHandler(e.currentTarget.selectedOptions[0].value);\n              }}>\n              {roles.map((role) => (\n                <option key={role.uuid} value={role.uuid}>\n                  {role.name}\n                </option>\n              ))}\n              <option value=\"add\">Add New Role</option>\n            </select>\n          </InputRow>\n          {isAddRole && (\n            <>\n              <InputRow>\n                <TextLabel htmlFor=\"roleName\">Role Name:</TextLabel>\n                <TextInput name=\"roleName\" required />\n              </InputRow>\n              <InputRow>\n                <TextLabel htmlFor=\"roleAbbreviation\">\n                  Role Abbreviation:\n                </TextLabel>\n                <TextInput name=\"roleAbbreviation\" required />\n              </InputRow>\n              <InputRow>\n                <TextLabel htmlFor=\"roleDescription\">\n                  Role Description:\n                </TextLabel>\n                <TextInput name=\"roleDescription\" required />\n              </InputRow>\n              {!orgBeingViewed.isWingLevel && isAdmin && <InputRow>\n                <Checkbox label=\"Base Agency?\" name=\"baseAgency\" defaultChecked={false} reverse />\n              </InputRow>}\n              <hr className=\"my-8 h-px border-0 bg-gray-300\" />\n            </>\n          )}\n          <InputRow>\n            <TextLabel htmlFor=\"contactPhone\">Role's Phone Number:</TextLabel>\n            <TextInput\n              name=\"contactPhone\"\n              pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n              required/>\n          </InputRow>\n          <InputRow>\n            <TextLabel htmlFor=\"contactEmail\">Role's Email:</TextLabel>\n            <TextInput name=\"contactEmail\" required />\n          </InputRow>\n        </div>\n        <Modal.Buttons link=\"..\" value={submitBtnAction}>\n          Save\n        </Modal.Buttons>\n      </Form>\n    </Modal>\n  );\n};\nexport const ErrorBoundary = ErrorReport;\nexport default CreateRoleDefaultPage;\n"],"names":["CreateRoleDefaultPage","roles","orgId","userRoles","useLoaderData","orgBeingViewed","useOutletContext","isAddRole","setIsAddRole","useState","length","isAdmin","useIsAdmin","submitBtnAction","setSubmitBtnAction","selectChangeHandler","val","jsx","Modal","children","jsxs","Form","method","className","Title","type","name","value","InputRow","TextLabel","htmlFor","id","onChange","e","currentTarget","selectedOptions","map","role","uuid","Fragment","TextInput","required","isWingLevel","Checkbox","label","defaultChecked","reverse","pattern","Buttons","link","ErrorBoundary","ErrorReport"],"mappings":"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"}