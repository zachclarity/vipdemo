{"version":3,"file":"checklist-DbO0L867.js","sources":["../../../app/components/Checklist/completeChecklists.tsx","../../../app/components/Checklist/ItemCard.tsx","../../../app/components/Checklist/View.tsx","../../../app/components/Checklist/inProgressChecklists.tsx","../../../app/routes/_withNav+/_noSideBar+/checklist.tsx"],"sourcesContent":["import type { GetUserChecklistsResponse } from '@repositories/checklist.server';\nimport { useState } from 'react';\n\nexport function CompleteChecklists( {\n  checklists,\n}: {\n  checklists: GetUserChecklistsResponse;\n} ) {\n  const [ expandedChecklistId, setExpandedChecklistId ] = useState<string | null>(\n    null\n  );\n  const toggleDropdown = ( checklistId: string ) => {\n    setExpandedChecklistId(\n      expandedChecklistId === checklistId ? null : checklistId\n    );\n  };\n\n  const filtered = checklists.filter( ( c ) => c.isComplete );\n\n  if ( filtered.length > 0 ) {\n    return (\n      <div className=\"mb-20\">\n        <span className=\"text-xl rounded-lg\">Completed Checklists</span>\n        <div className=\"overflow-x-auto pb-6 pt-4\">\n          <div className=\"grid grid-cols-3 text-left align-middle bg-gray-200\">\n            <p className=\"px-4 py-2 text-left font-bold\">Checklist Name</p>\n            <p className=\"px-4 py-2 text-left font-bold\">Date Assigned</p>\n            <p className=\"px-4 py-2 text-left font-bold\">Date Completed</p>\n          </div>\n          {/* TODO: Instead of loading every complete checklist the member has ever done we could use either another page or eager load it once they click the expand button. */ }\n          { filtered.map( ( checklist ) => (\n            <div key={ checklist.id } className=\"bg-gray-100\">\n              <button\n                className=\"grid grid-cols-3 text-left w-full\"\n                onClick={ () => toggleDropdown( checklist.id ) }>\n                <p className=\"px-4 py-2\">{ checklist.name }</p>\n                <p className=\"px-4 py-2\">\n                  { new Date( checklist.createdAt ).toLocaleString() }\n                </p>\n                <p className=\"px-4 py-2\">\n                  { new Date( checklist.dateCompleted ).toLocaleString() }\n                </p>\n              </button>\n\n              { expandedChecklistId === checklist.id && (\n                <div className=\"bg-gray-200 p-4\">\n                  { checklist.items.map( ( item ) => (\n                    <div\n                      key={ item.id }\n                      className=\"grid grid-cols-3 py-1 odd:bg-zinc-300 first:rounded-t-lg px-3 last:rounded-b-lg\">\n                      <p>Task Item: { item.reference.name ?? item.name }</p>\n                      <p className=\"ml-3\">\n                        Completed On:{ ' ' }\n                        { new Date( checklist.dateCompleted ).toLocaleString() }\n                      </p>\n                      <p className=\"ml-6\">Approved By: { item.role.name }</p>\n                    </div>\n                  ) ) }\n                </div>\n              ) }\n            </div>\n          ) ) }\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex border-b border-1 border-neutral-200 py-5 gap-5 justify-between mb-10\">\n      <h2 className=\"text-xl\">No Completed Checklists.</h2>\n    </div>\n  );\n}\n","import { DeleteButton, PrimaryButton } from '@components/ui/Buttons';\nimport { DatabaseUpdatedIcon, SolidCheckmark, StartTimer } from '@components/ui/Icons';\nimport { ChevronRightIcon, CalendarDaysIcon } from '@heroicons/react/24/solid';\nimport { ChatBubbleBottomCenterTextIcon } from '@heroicons/react/24/outline';\nimport { Link, useFetcher } from '@remix-run/react';\nimport type { GetUserChecklistsResponse } from '@repositories/checklist.server';\nimport { Status } from '@routes/_withNav+/_noSideBar+/checklist.$itemId+/status';\nimport { ChecklistItemStatus } from '@prisma/client';\n\nconst ChecklistItemCard = ({\n  item,\n  loggedInUser,\n}: {\n  item: GetUserChecklistsResponse[number]['items'][number];\n  loggedInUser: string;\n}) => {\n  const itemCompletedByMember = (itemRequiredRole: string) =>\n    itemRequiredRole === 'USER';\n  const notCompletedByMember = (itemRequiredRole: string) =>\n    itemRequiredRole !== 'USER';\n\n  const dueDate = new Date(item.createdAt);\n  dueDate.setDate(dueDate.getDate() + 30);\n\n  const markCompleteFetcher = useFetcher();\n  const markInCompleteFetcher = useFetcher();\n  const userRequestApprovalFetcher = useFetcher();\n\n  const unread = (comments: any) => {\n    let total = 0;\n    for (const item of comments) {\n      if (!item.readBy.includes(loggedInUser)) total++;\n    }\n    return total;\n  };\n\n  return (\n    <li key={item.id} className=\" border-b border-1 border-neutral-200\">\n      <div className=\"flex items-stretch gap-y-5 gap-x-10 py-3 pl-2 pr-3\">\n        <div className=\"flex flex-col basis-5/6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-grow pr-10\">\n              <h3 className=\"font-bold mb-1 w-full pb-3 pl-2 border-b\">\n                {item.reference.name ?? item.name}\n              </h3>\n              <div className=\"text-sm text-zinc-600 pt-2 pl-5 flex items-center gap-x-2\">\n                <div className=\"inline-flex items-center gap-1 text-nowrap\">\n                  <StartTimer className=\"size-6\" title=\"Date Started\" />\n                  {new Date(item.createdAt).toDateString()}\n                </div>\n                <div className=\"inline-flex items-center gap-1.5 text-nowrap\">\n                  <CalendarDaysIcon title=\"Due Date\" className=\"size-6\" />\n                  {dueDate.toDateString()}\n                </div>\n                <div className=\"inline-flex gap-1.5 items-center text-nowrap\">\n                  <DatabaseUpdatedIcon className=\"size-6\" title=\"Date Last Updated\" />\n                  {new Date(item.updatedAt).toDateString()}\n                </div>\n                <div className=\"inline-flex gap-1.5 items-center text-nowrap\">\n                  {item.status === ChecklistItemStatus.Completed && (\n                    <SolidCheckmark title=\"Date Completed\" className=\"size-6 text-green-500\"/>\n                  )}\n                  {item.status === ChecklistItemStatus.Completed && (\n                    new Date(item.dateCompleted ?? dueDate).toDateString()\n                  )}\n                </div>\n                <Link\n                  className=\"inline-flex items-center gap-1.5 hover:bg-zinc-300 hover:rounded-lg p-1\"\n                  to={`${item.id}/comments`}>\n                  <ChatBubbleBottomCenterTextIcon title=\"Comments\" className=\"size-6\" />\n                  {item.comments && (\n                    <>\n                      {item.comments.length}\n                      {unread(item.comments) > 0 && (\n                        <span className=\"relative flex size-2\">\n                          <span className=\"animate-[ping_1s_ease-in-out_5] absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75\"></span>\n                          <span className=\"relative inline-flex rounded-full size-2 bg-red-500\"></span>\n                        </span>\n                      )}\n                    </>\n                  )}\n                  {!item.comments && '0'}\n                </Link>\n              </div>\n            </div>\n            <Status status={item.status}></Status>\n          </div>\n        </div>\n        <div className=\"basis-1/6 flex items-center\">\n          {itemCompletedByMember(item.role.abbreviation) && (\n            <>\n              {item.status === ChecklistItemStatus.WaitingMember && (\n                <markCompleteFetcher.Form method=\"POST\" className=\"w-full\">\n                  <input type=\"hidden\" value={item.id} name=\"itemId\" />\n                  <input type=\"hidden\" value={loggedInUser} name=\"userId\" />\n                  <PrimaryButton\n                    type=\"submit\"\n                    value=\"update\"\n                    name=\"_action\"\n                    className=\"w-full py-1\">\n                    { markCompleteFetcher.state === 'idle'\n                      ? 'Mark Complete'\n                      : 'Processing...' }\n                  </PrimaryButton>\n                </markCompleteFetcher.Form>\n              )}\n              {item.status === ChecklistItemStatus.Completed && (\n                <div className=\"flex flex-col justify-between w-full\">\n                  <div>\n                    <markInCompleteFetcher.Form method=\"POST\">\n                      <input type=\"hidden\" value={ item.id } name=\"itemId\"/>\n                      <input\n                        type=\"hidden\"\n                        value={ loggedInUser }\n                        name=\"userId\"/>\n                      <DeleteButton\n                        type=\"submit\"\n                        name=\"_action\"\n                        value=\"incomplete\"\n                        disabled={ markInCompleteFetcher.state !== 'idle' }\n                        className=\"w-full\">\n                        { markInCompleteFetcher.state === 'idle'\n                          ? 'Unsign'\n                          : 'Processing...' }\n                      </DeleteButton>\n                    </markInCompleteFetcher.Form>\n                  </div>\n                </div>\n              ) }\n            </>\n          ) }\n          { notCompletedByMember( item.role.abbreviation ) && (\n            <>\n              { item.status === ChecklistItemStatus.WaitingMember && (\n                <userRequestApprovalFetcher.Form\n                  method=\"POST\"\n                  className=\"text-white text-center rounded-lg p-2 w-full\">\n                  <input type=\"hidden\" name=\"itemId\" value={ item.id }/>\n                  <input type=\"hidden\" name=\"userId\" value={ loggedInUser }/>\n                  <PrimaryButton\n                    type=\"submit\"\n                    value=\"markready\"\n                    name=\"_action\"\n                    className=\"w-full\">\n                    { userRequestApprovalFetcher.state === 'idle'\n                      ? 'Mark Ready'\n                      : 'Processing...' }\n                  </PrimaryButton>\n                </userRequestApprovalFetcher.Form>\n              ) }\n              { (item.status !== ChecklistItemStatus.WaitingMember) && (\n                <dl className=\"\">\n                  <dt className=\"font-bold\">{item.status === ChecklistItemStatus.Completed ? 'Completed by' : 'Point of Contact'}:</dt>\n                  <dd>{item.role.name}</dd>\n                </dl>\n              )}\n            </>\n          )}\n        </div>\n        <div className=\"flex items-center\">\n          <Link\n            to={`${item.id}`}\n            className=\"hover:ring-1 rounded py-1.5 px-1 hover:bg-zinc-200\">\n            <ChevronRightIcon className=\"h-10 w-10\" />\n          </Link>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ChecklistItemCard;\n","import { Badge, type BadgeProps } from '@components/ui/Badge';\nimport { CalendarCheckmark, StartTimer } from '@components/ui/Icons';\nimport { Pagination, usePagination } from '@lib/hooks/usePagination';\nimport type { GetUserChecklistsResponse } from '@repositories/checklist.server';\nimport ChecklistItemCard from './ItemCard';\n\nconst ChecklistView = ({\n  checklist,\n  loggedInUser,\n}: {\n  checklist: GetUserChecklistsResponse[0];\n  loggedInUser: string;\n}) => {\n  const {\n    currentItems,\n    currentPage,\n    totalPages,\n    setCurrentPage,\n    nextPage,\n    prevPage,\n    itemPos,\n    setItemsPerPage,\n    itemsPerPage,\n  } = usePagination(checklist.items, 10);\n\n  const totalItems = checklist.items.length;\n  const completeItemsCount = checklist.items.filter(\n    (item) => item.isComplete\n  ).length;\n  const totalPercentage = (completeItemsCount / totalItems) * 100;\n\n  const startDate = new Date(checklist.createdAt);\n  const dueDate = new Date(startDate);\n  dueDate.setDate(dueDate.getDate() + 30);\n\n  const today = new Date(Date());\n  const thirtyDays = new Date();\n  thirtyDays.setDate(today.getDate() + 30);\n  const twoWeeks = new Date();\n  twoWeeks.setDate(today.getDate() + 14);\n  const fiveDays = new Date();\n  fiveDays.setDate(today.getDate() + 5);\n  let dateBadgeVariant: BadgeProps['variant'] = 'none';\n  if (dueDate < thirtyDays) {\n    if (dueDate < twoWeeks) {\n      if (dueDate < fiveDays) {\n        if (dueDate < today) {\n          dateBadgeVariant = 'danger';\n        } else dateBadgeVariant = 'warning';\n      } else dateBadgeVariant = 'primary';\n    }\n  }\n  return (\n    <>\n      <section key={ checklist.id } className=\"pt-3 mb-20 pb-5\">\n        <div className=\"pb-2 border-b-1 border-b border-gray-300\">\n          <div className=\"space-y-1\">\n            <ul className=\"flex items-center justify-between\">\n              <li className=\"font-medium text-secondary-700\">Progress</li>\n              <li className=\"text-sm text-secondary-500\">\n                { completeItemsCount } / { totalItems } Completed\n              </li>\n              <li className=\"text-sm text-secondary-500\">\n                { totalPercentage.toFixed() }%\n              </li>\n            </ul>\n            <div className=\"relative flex h-2 w-full overflow-hidden rounded-full bg-secondary-200\">\n              <div\n                role=\"progressbar\"\n                aria-valuenow={ totalPercentage }\n                aria-valuemin={ 0 }\n                aria-valuemax={ 100 }\n                style={ { width: `${ totalPercentage }%` } }\n                className=\"flex h-full items-center justify-center bg-green-500 text-xs text-white\"></div>\n            </div>\n          </div>\n          <h2 className=\"text-2xl font-bold mt-5\">\n            Checklist: { checklist.name }\n          </h2>\n          <div className=\"text-sm px-2 flex gap-x-2 items-center my-2\">\n            <Badge className=\"gap-x-2\"><StartTimer className=\"size-4\"/>\n              Started { startDate.toLocaleString( 'en-US', {\n                month: 'numeric',\n                day: 'numeric',\n                year: 'numeric',\n              } ) }</Badge>\n            <Badge className=\"gap-x-2\" variant={ dateBadgeVariant }>\n              <CalendarCheckmark className=\"size-5\" />\n              Due { dueDate.toLocaleString( 'en-US', {\n                month: 'numeric',\n                day: 'numeric',\n                year: 'numeric',\n              } ) }</Badge>\n          </div>\n        </div>\n\n        <ul className=\"list-none\">\n          { currentItems.map( ( item ) => (\n            <ChecklistItemCard\n              key={ item.id }\n              item={ item }\n              loggedInUser={ loggedInUser }/>\n          ) ) }\n        </ul>\n\n        <Pagination\n          currentPage={ currentPage }\n          totalPages={ totalPages }\n          setCurrentPage={ setCurrentPage }\n          itemsPerPage={ itemsPerPage }\n          setItemsPerPage={ setItemsPerPage }\n          itemPos={ itemPos }\n          nextPage={ nextPage }\n          prevPage={ prevPage }/>\n      </section>\n    </>\n  );\n};\n\nexport default ChecklistView;\n","import ChecklistView from '@components/Checklist/View';\nimport { Badge, type BadgeProps } from '@components/ui/Badge';\nimport { StartTimer } from '@components/ui/Icons';\nimport { useRootLayoutData } from '@lib/hooks/useMatchesData';\nimport type { GetUserChecklistsResponse } from '@repositories/checklist.server';\n\nexport function InProgressChecklists( {\n  checklists,\n}: {\n  checklists: GetUserChecklistsResponse;\n} ) {\n  const user = useRootLayoutData( 'user' );\n\n  const filtered = checklists.filter( ( c ) => !c.isComplete );\n\n\n\n  if ( filtered.length > 0 )\n    return (\n      <div className=\"mt-3\">\n        <h1 className=\"text-xl px-2 py-1 rounded-xl\">\n          In Progress Checklist\n        </h1>\n        { filtered.map( ( checklist ) => (\n          <ChecklistView\n            key={ checklist.id }\n            checklist={ checklist }\n            loggedInUser={ user.id }/>\n        ) ) }\n      </div>\n    );\n\n  return (\n    <div className=\"flex border-b border-1 border-neutral-200 py-5 gap-5 justify-between mb-10\">\n      <h3 className=\"text-xl\">No Active Checklists.</h3>\n    </div>\n  );\n}\n","import { CompleteChecklists } from '@components/Checklist/completeChecklists';\nimport { InProgressChecklists } from '@components/Checklist/inProgressChecklists';\nimport ErrorReport from '@components/ui/ErrorReport';\nimport type { ActionFunctionArgs, LoaderFunctionArgs } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { Outlet, useLoaderData } from '@remix-run/react';\nimport { requireUser } from '@services/user.server';\nimport { AuthorizationError } from 'remix-auth';\nimport { jsonWithError, jsonWithSuccess } from 'remix-toast';\nimport z from 'zod';\nimport { uncompleteItem } from '../_withSideBar+/.server/tasks.queries';\nimport {\n  completeItem,\n  getUserChecklists,\n  markRead,\n  sendUserMessage,\n  userApprovalRequest,\n  userApprovalRequestUnMark,\n} from './.server/checklist.queries';\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const userId = await requireUser(request);\n  const checklists = await getUserChecklists(userId);\n\n  return json({ checklists }, {\n    headers: {\n      'Content-Security-Policy': 'frame-ancestors: none',\n      'X-Frame-Options': 'SAMEORIGIN',\n    },\n  });\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const cookieUserId = await requireUser(request);\n  // const schema = z.object({\n  //   itemId: z.string(),\n  //   userId: z.literal(cookieUserId),\n  // });\n  const updateTaskSchema = z.object({\n    itemId: z.string(),\n    postedById: z.string().optional(),\n    userId: z.literal(cookieUserId),\n    content: z.string().optional(),\n    commentId: z.string().optional(),\n    _action: z.union([\n      z.literal('update'),\n      z.literal('incomplete'),\n      z.literal('send'),\n      z.literal('markready'),\n      z.literal('notready'),\n      z.literal('markRead'),\n      z.literal('notready'),\n    ]), // with more actions this needs to be z.union([z.literal('update'), z.literal('otherAction')])\n  });\n\n  try {\n    const { userId, itemId, _action, content, postedById, commentId } =\n      updateTaskSchema.parse(\n        Object.fromEntries((await request.formData()).entries())\n      );\n\n    if (_action === 'update') {\n      await completeItem(itemId, userId);\n      return jsonWithSuccess({ status: 'success' }, 'Task Signed!');\n    }\n    if (_action === 'incomplete') {\n      await uncompleteItem(itemId, userId);\n      return jsonWithSuccess({ status: 'success' }, 'Task Unsigned');\n    }\n    if (_action === 'send') {\n      await sendUserMessage(itemId, postedById ?? '', content ?? '');\n      return jsonWithSuccess({ status: 'success' }, 'Message sent!');\n    }\n    if (_action === 'markready') {\n      await userApprovalRequest(itemId);\n      return jsonWithSuccess({ status: 'success' }, 'Item awaiting approval.');\n    }\n    // TODO: implement user not ready\n    if (_action === 'notready') {\n      await userApprovalRequestUnMark(itemId);\n      return jsonWithSuccess({ status: 'success'}, 'Task Unmarked');\n    }\n    if (_action === 'markRead') {\n      const items: number[] = Array.from(\n        JSON.parse(decodeURIComponent(commentId ?? ''))\n      );\n      await markRead(items, userId);\n      return json({ status: 'success' });\n    }\n  } catch (error) {\n    console.error('Error during approval: ', error);\n    if (error instanceof TypeError) {\n      if (error instanceof AuthorizationError) {\n        return jsonWithError(\n          { status: 'error', error: 'Authorization Error.' },\n          'User is not authorized.'\n        );\n      }\n      return jsonWithError(\n        { status: 'error', error: error.message || 'TypeError.' },\n        'The URL provided for the request is invalid.'\n      );\n    } else if (error instanceof Error) {\n      return jsonWithError(\n        { status: 'error', error: error.message || 'Unknown Error.' },\n        'An error occurred.'\n      );\n    }\n  }\n}\n\nconst ChecklistLayout = () => {\n  const { checklists } = useLoaderData<typeof loader>();\n\n  return (\n    <>\n      <div className=\"rounded-lg bg-zinc-50 drop-shadow-xl container mx-auto px-5 pt-2 mt-5\">\n        <InProgressChecklists checklists={checklists} />\n      </div>\n      <div className=\"rounded-lg bg-zinc-50 drop-shadow-xl container mx-auto px-5 pt-2\">\n        <CompleteChecklists checklists={checklists} />\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport const ErrorBoundary = ErrorReport;\nexport default ChecklistLayout;\n"],"names":["CompleteChecklists","checklists","expandedChecklistId","setExpandedChecklistId","useState","toggleDropdown","checklistId","filtered","c","jsxs","jsx","checklist","item","ChecklistItemCard","loggedInUser","itemCompletedByMember","itemRequiredRole","notCompletedByMember","dueDate","markCompleteFetcher","useFetcher","markInCompleteFetcher","userRequestApprovalFetcher","unread","comments","total","StartTimer","CalendarDaysIcon","DatabaseUpdatedIcon","ChecklistItemStatus","SolidCheckmark","Link","ChatBubbleBottomCenterTextIcon","Fragment","Status","PrimaryButton","DeleteButton","ChevronRightIcon","ChecklistView","currentItems","currentPage","totalPages","setCurrentPage","nextPage","prevPage","itemPos","setItemsPerPage","itemsPerPage","usePagination","totalItems","completeItemsCount","totalPercentage","startDate","today","thirtyDays","twoWeeks","fiveDays","dateBadgeVariant","Badge","CalendarCheckmark","Pagination","InProgressChecklists","user","useRootLayoutData","ChecklistLayout","useLoaderData","children","className","Outlet","ErrorBoundary","ErrorReport"],"mappings":"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"}