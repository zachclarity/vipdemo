{"version":3,"file":"Breadcrumbs-BIMwwxZu.js","sources":["../../../app/components/OrgBreadcrumbs/context/BreadcrumbContext.tsx","../../../app/components/OrgBreadcrumbs/utils/getDisplayName.ts","../../../app/components/OrgBreadcrumbs/components/OrganizationSelect.tsx","../../../app/components/OrgBreadcrumbs/components/SelectOption.tsx","../../../app/components/OrgBreadcrumbs/components/Crumb.tsx","../../../app/components/OrgBreadcrumbs/components/Breadcrumbs.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef } from 'react';\n\ninterface BreadcrumbsContextType {\n  manualSet: boolean;\n  setManualSet: (value: boolean) => void;\n  orgId: React.RefObject<string>;\n}\n\nconst BreadcrumbsContext = createContext<BreadcrumbsContextType | undefined>(\n  undefined\n);\n\nexport function BreadcrumbsProvider({\n  children,\n  initialOrgId,\n}: {\n  children: React.ReactNode;\n  initialOrgId: string;\n}) {\n  const [manualSet, setManualSet] = useState(false);\n  const orgId = useRef(initialOrgId);\n\n  const value = React.useMemo(\n    () => ({\n      manualSet,\n      setManualSet,\n      orgId,\n    }),\n    [manualSet]\n  );\n\n  return (\n    <BreadcrumbsContext.Provider value={value}>\n      {children}\n    </BreadcrumbsContext.Provider>\n  );\n}\n\nexport function useBreadcrumbs() {\n  const context = useContext(BreadcrumbsContext);\n  if (context === undefined) {\n    throw new Error('useBreadcrumbs must be used within a BreadcrumbsProvider');\n  }\n  return context;\n}\n","import type { OrganizationWithChildren } from '@repositories/organization.server';\n\nexport function getDisplayName(tree?: OrganizationWithChildren): string {\n  if (!tree) return '';\n  return tree.depth <= 1 ? tree.name : (tree.abbreviation || tree.name);\n}","import React from 'react';\n\ninterface OrganizationSelectProps {\n  selected: string;\n  onChange: (value: string) => void;\n  children: React.ReactNode;\n}\n\nexport function OrganizationSelect({ selected, onChange, children }: OrganizationSelectProps) {\n  return (\n    <select\n      onChange={(e) => onChange(e.target.value)}\n      value={selected}\n      className=\"rounded-md w-full border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50\">\n      <option value=\"\">Next Organization</option>\n      {children}\n    </select>\n  );\n}","import React from 'react';\n\nexport function SelectOption({ children, value }: { children: React.ReactNode; value: string }) {\n  return <option value={value}>{children}</option>;\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport type { CrumbProps } from '../types';\nimport { useBreadcrumbs } from '../context';\nimport { getDisplayName } from '../utils/getDisplayName';\nimport { OrganizationSelect } from './OrganizationSelect';\nimport { SelectOption } from './SelectOption';\n\nexport function Crumb({ tree, setNewParent, ancestors }: CrumbProps) {\n  const [selected, setSelected] = useState('');\n  const { manualSet, setManualSet, orgId } = useBreadcrumbs();\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n    if (setManualSet) {\n      setManualSet(true);\n    }\n    if (selected) {\n      setSelected('');\n      setNewParent(tree?.uuid ?? '');\n    }\n  }, [selected, setManualSet, setNewParent, tree?.uuid]);\n\n  const handleSelectChange = useCallback((value: string) => {\n    setSelected(value);\n    setNewParent(value);\n  }, [setNewParent]);\n\n  useEffect(() => {\n    if (!manualSet && ancestors.length > 0 && tree?.children) {\n      const currentParent = tree.children.find((child) =>\n        ancestors.includes(child.uuid)\n      );\n\n      if (currentParent && currentParent.uuid !== orgId?.current) {\n        setSelected(currentParent.uuid);\n        setNewParent(currentParent.uuid);\n      } else if (!currentParent) {\n        setSelected('');\n      }\n    }\n  }, [ancestors, tree, manualSet, orgId?.current, setNewParent]);\n\n  const filteredChildren = tree?.children?.filter(\n    (child) => child.uuid !== orgId?.current\n  );\n\n  const selectedChild = tree?.children?.find((child) => child.uuid === selected);\n\n  return (\n    <>\n      <div\n        onClick={handleClick}\n        className={`${\n          tree?.children && selected\n            ? 'text-sm text-zinc-500 hover:text-red-800 hover:cursor-pointer'\n            : 'text-base'\n        } inline-flex`}>\n        {getDisplayName(tree)}\n      </div>\n\n      {tree?.children && <span className=\"text-zinc-600 text-xs\">{' / '}</span>}\n\n      {selected && (\n        <Crumb\n          setNewParent={setNewParent}\n          tree={selectedChild}\n          ancestors={ancestors}/>\n      )}\n\n      {filteredChildren && filteredChildren?.length > 0 && (\n        <div className=\"mt-2\">\n          {!selected && (\n            <OrganizationSelect\n              selected={selected}\n              onChange={handleSelectChange}>\n              {filteredChildren.map((child) => (\n                <SelectOption key={child.uuid} value={child.uuid}>\n                  {child.name}\n                </SelectOption>\n              ))}\n            </OrganizationSelect>\n          )}\n          {selected && selected !== 'DAF' && <div className=\"ml-1\" />}\n        </div>\n      )}\n    </>\n  );\n}","import { BreadcrumbsProvider } from '../context';\nimport { Crumb } from './Crumb';\nimport type { BreadcrumbProps } from '../types';\n\nfunction Breadcrumbs({ orgId, ...props }: BreadcrumbProps) {\n  return (\n    <BreadcrumbsProvider initialOrgId={orgId}>\n      <Crumb {...props} />\n    </BreadcrumbsProvider>\n  );\n}\n\nexport default Breadcrumbs;"],"names":["BreadcrumbsContext","createContext","BreadcrumbsProvider","children","initialOrgId","manualSet","setManualSet","useState","orgId","useRef","value","React","jsx","useBreadcrumbs","context","useContext","getDisplayName","tree","OrganizationSelect","selected","onChange","jsxs","e","SelectOption","Crumb","setNewParent","ancestors","setSelected","handleClick","useCallback","handleSelectChange","useEffect","currentParent","child","filteredChildren","_a","selectedChild","_b","Fragment","Breadcrumbs","props"],"mappings":"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"}