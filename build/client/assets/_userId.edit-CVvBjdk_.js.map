{"version":3,"file":"_userId.edit-CVvBjdk_.js","sources":["../../../app/routes/_withNav+/_withSideBar+/_manage+/user+/$userId.edit.tsx"],"sourcesContent":["import { Form, Label, Input } from '@components/ui';\nimport ErrorReport from '@components/ui/ErrorReport';\nimport { Modal } from '@components/ui/modals';\nimport { Transition } from '@headlessui/react';\nimport { TrashIcon } from '@heroicons/react/24/solid';\nimport { UserRank } from '@lib/constants';\nimport useIsAdmin from '@lib/hooks/useIsAdmin';\nimport { useRootLayoutData } from '@lib/hooks/useMatchesData';\n\nimport { useLoaderData, useParams, useSearchParams } from '@remix-run/react';\nimport { type EditLoaderFn } from '@routes/_withNav+/_withSideBar+/_manage+/user+/.server/user.queries';\nimport { useState } from 'react';\n\nexport {\n  EditLoaderFn as loader,\n  EditActionFn as action,\n} from './.server/user.queries';\n\nconst EditTemplate = () => {\n  const { userId } = useParams();\n  const [searchParams] = useSearchParams();\n  const orgId = searchParams.get('org') ?? '';\n  const { user, orgs, allUsers } = useLoaderData<typeof EditLoaderFn>();\n  const roles = useRootLayoutData('roles');\n  const { isAdmin } = useIsAdmin(roles);\n  const [supervisor, setSupervisor] = useState(false);\n\n  const handleSupervisorChange = (e) => {\n    const value = e.target.value;\n    if(value !== 'default'){\n      setSupervisor(true);\n    }else{\n      setSupervisor(false);\n    }\n  };\n\n  if(user.supervisorId && !supervisor){\n    setSupervisor(true);\n  }\n\n  return (\n    <Modal>\n      <Form method=\"post\">\n        <Input.Hidden name=\"_navigateOrgId\" value={orgId} />\n        <Input.Hidden name=\"userId\" value={userId} />\n        <Modal.Body>\n          <Form.Row className=\"flex justify-between\">\n            <p className=\"text-sm\">\n              <span className=\"font-medium text-gray-700 mr-1\">\n                Assigned Unit:\n              </span>\n              {user.currentOrg?.name}\n            </p>\n          </Form.Row>\n          <Form.Row>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input.Text name=\"name\" defaultValue={user?.name} />\n          </Form.Row>\n          <Form.Row>\n            <Label htmlFor=\"workEmail\">Email</Label>\n            <Input.Email\n              name=\"workEmail\"\n              defaultValue={user?.workEmail}\n              pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"/>\n          </Form.Row>\n          <Transition show={isAdmin}>\n            <Form.Row>\n              <Label htmlFor=\"assignedOrg\">Assigned Organization</Label>\n              <Input.Select\n                options={orgs}\n                name=\"assignedOrg\"\n                valueKey=\"uuid\"\n                defaultValue={user.currentOrg?.uuid}/>\n            </Form.Row>\n          </Transition>\n          {/* <InputRow>\n            <TextLabel htmlFor=\"dodId\">DoD ID:</TextLabel>\n            <TextInput\n              name=\"dodId\"\n              defaultValue={user?.dodId}\n              pattern=\"[0-9]{10}\"\n            />\n          </InputRow> */}\n          <Form.Row>\n            <Label>\n              <div className=\"inline-flex\">\n                {user.supervisorId ? 'Assigned Supervisor' : 'Assign Supervisor'}\n                {(!supervisor || user.supervisorId) && <p className=\"text-red-600\">&nbsp; *</p>}\n              </div>\n            </Label>\n            {user.supervisorId ? (\n              <div className=\"flex border w-full p-1 justify-between rounded-md shadow-md\">\n                <div className=\"flex pt-1 pl-2\">\n                  <p className=\"pr-1 \">\n                    {UserRank[allUsers.find((u) => u.id === user.supervisorId)?.rank].abb}\n                  </p>\n                  <p className=\"px-1\">\n                    {allUsers.find((u) => u.id === user.supervisorId)?.name}\n                  </p>\n                </div>\n                <button\n                  name=\"_action\"\n                  value=\"deleteSuper\"\n                  className=\"inline-flex text-red-700 p-1 items-center cursor-pointer w-full justify-center drop-shadow-none rounded-md text-sm font-semibold hover:bg-red-200 hover:drop-shadow sm:mt-0 sm:w-auto\">\n                  <>\n                    <TrashIcon\n                      className=\"size-6\"\n                      aria-hidden=\"true\"></TrashIcon>\n                  </>\n                </button>\n              </div>\n            ) : (\n              <Input.Select\n                options={allUsers\n                  .filter((u) => u.id !== user.id)\n                  // The above line filters out the current user from the list,\n                  // ensuring the user cannot assign themselves as their own supervisor.\n                  //\n                  // The next step filters the list by rank to include only eligible supervisors.\n                  // Hereâ€™s how the rank hierarchy works:\n                  //  1 = AB (Airman Basic)\n                  //  2 = Amn (Airman)\n                  //  3 = A1C (Airman First Class)\n                  //  4 = SrA (Senior Airman)\n                  //  5 = SSgt (Staff Sergeant)\n                  //  6 = TSgt (Technical Sergeant)\n                  //  ...and so on.\n                  // In this case, the logic ensures only ranks greater than 4 (SSgt and above)\n                  // are included in the supervisor list. Modify this logic to suit rank requirements.\n                  .filter((u) => u.currentOrgId === user.currentOrgId)\n                  .filter((u) => UserRank[u.rank].order > 4)\n                  .sort((a, b) => a.name.localeCompare(b.name))\n                  .map((u) => ({\n                    id: u.id,\n                    name: `${UserRank[u.rank].abb} ${u.name}`,\n                  }))}\n                name=\"supervisorId\"\n                valueKey=\"id\"\n                defaultValue=\"\"\n                onChange={(e) => handleSupervisorChange(e)}/>\n            )}\n          </Form.Row>\n          <Form.Row>\n            <Label>\n              {user.sponsorId ? 'Assigned Sponsor' : 'Assign Sponsor'}\n            </Label>\n            {user.sponsorId ? (\n              <div className=\"flex border w-full p-1 justify-between rounded-md shadow-md\">\n                <div className=\"flex pt-1 pl-2\">\n                  <p className=\"pr-1 \">\n                    {UserRank[allUsers.find((u) => u.id === user.sponsorId)?.rank].abb}\n                  </p>\n                  <p className=\"px-1\">\n                    {allUsers.find((u) => u.id === user.sponsorId)?.name}\n                  </p>\n                </div>\n                <button\n                  name=\"_action\"\n                  value=\"deleteSponsor\"\n                  className=\"inline-flex text-red-700 p-1 items-center cursor-pointer w-full justify-center drop-shadow-none rounded-md text-sm font-semibold hover:bg-red-200 hover:drop-shadow sm:mt-0 sm:w-auto\">\n                  <TrashIcon\n                    className=\"size-6\"\n                    aria-hidden=\"true\"></TrashIcon>\n                </button>\n              </div>\n            ) : (\n              <Input.Select\n                options={allUsers\n                  .map((u) => ({\n                    id: u.id,\n                    name: `${UserRank[u.rank].abb} ${u.name}`, // Rank + Name\n                  }))\n                  .sort((a, b) => {\n                    // Only sort by name, not the rank\n                    return a.name.split(' ').slice(1).join(' ').localeCompare(b.name.split(' ').slice(1).join(' ')); // Sort by name part only\n                  })}\n                name=\"sponsorsId\"\n                valueKey=\"id\"\n                defaultValue={\n                  user.sponsorId\n                    ? allUsers.find((u) => u.id === user.sponsorId)?.name\n                    : ''\n                }\n              />\n            )}\n          </Form.Row>\n          <Form.Row>\n            <Label.Heading>Questions</Label.Heading>\n            <Input.CheckboxGroup>\n              <Input.Checkbox\n                name=\"isDormResident\"\n                defaultChecked={user.isDormResident ?? false}\n                label=\"Is the member a dorm resident?\"/>\n              <Input.Checkbox\n                name=\"hasDependents\"\n                defaultChecked={user.hasDependents ?? false}\n                label=\"Does the member currently have any dependents?\"/>\n              <Input.Checkbox\n                name=\"hasEFMP\"\n                defaultChecked={user.hasEFMP ?? false}\n                label=\"Is the member currently enrolled in the EFMP?\"/>\n            </Input.CheckboxGroup>\n            {/*<Checkbox\n              name=\"sponsorReach\"\n              defaultChecked={user.isDormResident ?? false}\n              label=\"Has the member been contacted by their sponsor?\" />*/}\n          </Form.Row>\n        </Modal.Body>\n        <Modal.Buttons\n          link=\"..\"\n          value=\"edit\"\n          disabled={!supervisor}>\n          {user.cssVerified ? 'Save' : 'Verify & Save'}\n        </Modal.Buttons>\n      </Form>\n    </Modal>\n  );\n};\nexport const ErrorBoundary = ErrorReport;\nexport default EditTemplate;\n"],"names":["EditTemplate","userId","useParams","searchParams","useSearchParams","orgId","get","user","orgs","allUsers","useLoaderData","roles","useRootLayoutData","isAdmin","useIsAdmin","supervisor","setSupervisor","useState","handleSupervisorChange","e","value","target","supervisorId","jsx","Modal","children","jsxs","Form","method","Input","Hidden","name","Body","Row","className","currentOrg","Label","htmlFor","Text","defaultValue","Email","workEmail","pattern","Transition","show","Select","options","valueKey","uuid","UserRank","find","u","id","rank","abb","Fragment","TrashIcon","filter","currentOrgId","order","sort","a","b","localeCompare","map","onChange","sponsorId","split","slice","join","Heading","CheckboxGroup","Checkbox","defaultChecked","isDormResident","label","hasDependents","hasEFMP","Buttons","link","disabled","cssVerified","ErrorBoundary","ErrorReport"],"mappings":"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"}