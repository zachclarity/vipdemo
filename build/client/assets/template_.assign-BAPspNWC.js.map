{"version":3,"file":"template_.assign-BAPspNWC.js","sources":["../../../app/lib/hooks/useFilteredUsers.ts","../../../app/routes/_withNav+/_withSideBar+/_manage+/template_.assign.tsx"],"sourcesContent":["import type { UserWithChecklistsAndCount } from '@lib/constants';\nimport { Organization } from '@prisma/client';\nimport { useContext, useEffect, useState } from 'react';\n\nenum FilterType {\n  NONE = 'NONE',\n  VERIFIED = 'VERIFIED',\n  UNVERIFIED = 'UNVERIFIED',\n}\n\nconst useFilteredUsers = ({\n  searchContext,\n  initialUserList,\n}: {\n  searchContext: React.Context<{\n    searchQuery: string;\n    setSearchQuery?: Function;\n  }>;\n  initialUserList: Array<{requestedOrg?:Organization}&Pick<UserWithChecklistsAndCount, 'checklists' | 'currentOrg' | 'workEmail' | 'name' | 'cssVerified' | 'supervisor' | 'id' | 'moveType' | 'previousOrg' | '_count' | 'rank'>>;\n}) => {\n  const { searchQuery } = useContext(searchContext);\n  const [users, setUsers] = useState([...initialUserList]);\n  const [filter, setFilter] = useState<FilterType>(FilterType.NONE);\n  const [filteredUsers, setFilteredUsers] = useState(users);\n\n  const search = (user: { workEmail: string; name: string | null }) =>\n    user.workEmail.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    user.name?.toLowerCase().includes(searchQuery.toLowerCase());\n\n  useEffect(() => {\n    if (initialUserList) setUsers([...initialUserList]);\n  }, [initialUserList]);\n\n  useEffect(() => {\n    switch (filter) {\n      case FilterType.NONE:\n        if (searchQuery === '') setFilteredUsers(() => [...users]);\n        else setFilteredUsers(() => [...users.filter(search)]);\n        break;\n      case FilterType.VERIFIED:\n        if (searchQuery === '')\n          setFilteredUsers(() => [\n            ...users.filter((user) => user.cssVerified !== null),\n          ]);\n        else\n          setFilteredUsers(() => [\n            ...users.filter((user) => user.cssVerified !== null).filter(search),\n          ]);\n        break;\n      case FilterType.UNVERIFIED:\n        if (searchQuery === '')\n          setFilteredUsers(() => [\n            ...users.filter((user) => user.cssVerified === null),\n          ]);\n        else\n          setFilteredUsers(() => [\n            ...users.filter((user) => user.cssVerified === null).filter(search),\n          ]);\n        break;\n      default:\n        break;\n    }\n  }, [searchQuery, filter, users]);\n\n  return { filteredUsers, filter, setFilter };\n};\n\nexport default useFilteredUsers;\n","import { LinkButton } from '@components/ui/Buttons';\nimport ErrorReport from '@components/ui/ErrorReport';\nimport PageHeader from '@components/ui/PageHeader';\nimport useFilteredUsers from '@lib/hooks/useFilteredUsers';\nimport { RolePermissions } from '@lib/utils';\nimport { json, type LoaderFunctionArgs } from '@remix-run/node';\nimport { Outlet, useLoaderData, useSearchParams } from '@remix-run/react';\nimport { SearchContext } from '@routes/_withNav+/_withSideBar+/_layout';\nimport { requireUserAsObject } from '@services/user.server';\nimport { getOrgBeingViewed } from './.server/org.queries';\nimport { getUsersByOrg } from './user+/.server/user.queries';\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const { id: userId, currentOrg } = await requireUserAsObject(request, {\n    permissions: RolePermissions.ADMIN,\n  });\n\n  const { orgBeingViewed, orgParam } = await getOrgBeingViewed({\n    defaultOrgId: currentOrg.uuid,\n    searchParams: new URL(request.url).searchParams,\n  });\n\n  const users = await getUsersByOrg(orgParam, {\n    includeChecklists: true,\n  });\n\n  return json({\n    orgBeingViewed,\n    users,\n    currentUser: { id: userId },\n  });\n};\n\nconst TemplateAssignView = () => {\n  const { users, orgBeingViewed, currentUser } =\n    useLoaderData<typeof loader>();\n  const [searchParams] = useSearchParams();\n\n  const orgParam = searchParams.get('org');\n\n  const {filteredUsers} = useFilteredUsers({searchContext: SearchContext, initialUserList: users});\n\n  return (\n    <>\n      <div className=\"mb-5\">\n        <PageHeader org={orgBeingViewed} pageTitle=\"Assign Template\" />\n        <div className=\"mb-5\">\n          {filteredUsers.length > 0 && (\n            <ul>\n              {filteredUsers.map((user) => (\n                <li\n                  className=\"flex flex-wrap justify-between items-center p-2 border-b border-b-1 border-black even:bg-zinc-50\"\n                  key={`template-${user.id}`}>\n                  <div>\n                    <p className=\"font-bold text-lg flex\">\n                      {user.name}\n                      {user.id === currentUser.id && (\n                        <span className=\"font-normal text-xs rounded-xl bg-blue-500 text-white px-3 py-[0.15rem] ml-1 self-center\">\n                          You\n                        </span>\n                      )}\n                    </p>\n                    <p>Checklists Assigned: {user._count.checklists}</p>\n                  </div>\n                  <LinkButton\n                    variant=\"green\"\n                    to={`/template/assign/${user.id}`}>\n                    Manage Checklists\n                  </LinkButton>\n                </li>\n              ))}\n            </ul>\n          )}\n          {filteredUsers.length === 0 && <p>No Users found.</p>}\n        </div>\n      </div>\n      <Outlet />\n    </>\n  );\n};\nexport const ErrorBoundary = ErrorReport;\nexport default TemplateAssignView;\n"],"names":["useFilteredUsers","searchContext","initialUserList","searchQuery","useContext","users","setUsers","useState","filter","setFilter","filteredUsers","setFilteredUsers","search","user","_a","useEffect","TemplateAssignView","orgBeingViewed","currentUser","useLoaderData","searchParams","useSearchParams","get","SearchContext","jsxs","Fragment","children","className","jsx","PageHeader","org","pageTitle","length","map","name","id","_count","checklists","LinkButton","variant","to","Outlet","ErrorBoundary","ErrorReport"],"mappings":"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"}