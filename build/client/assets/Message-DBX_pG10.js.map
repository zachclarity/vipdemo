{"version":3,"file":"Message-DBX_pG10.js","sources":["../../../node_modules/@heroicons/react/24/outline/esm/UserCircleIcon.js","../../../app/lib/hooks/useInView.ts","../../../app/components/ui/Message.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction UserCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(UserCircleIcon);\nexport default ForwardRef;","import { useState, useEffect } from \"react\";\n\nconst useInView = (elementRef: React.MutableRefObject<HTMLElement | null>, containerRef: React.MutableRefObject<HTMLElement | null>) => {\n    const [isInView, setIsInView] = useState(false);\n  \n    useEffect(() => {\n      const handleScroll = () => {\n        const container = containerRef.current;\n        const element = elementRef.current;\n  \n        if (container && element) {\n          const containerRect = container.getBoundingClientRect();\n          const elementRect = element.getBoundingClientRect();\n  \n          // Container's scroll position\n          const scrollTop = container.scrollTop;\n          const scrollLeft = container.scrollLeft;\n  \n          // Calculate the visible area of the container\n          const containerVisibleTop =\n            containerRect.top + scrollTop;\n          const containerVisibleLeft = containerRect.left + scrollLeft;\n          const containerVisibleBottom =\n            containerVisibleTop + containerRect.height;\n          const containerVisibleRight =\n            containerVisibleLeft + containerRect.width;\n  \n          // Check if the item is in the visible area of the container\n          const elementTop = elementRect.top + scrollTop;\n          const elementLeft = elementRect.left + scrollLeft;\n          const elementBottom = elementTop + elementRect.height;\n          const elementRight = elementLeft + elementRect.width;\n  \n          setIsInView(\n            elementBottom > containerVisibleTop &&\n              elementTop < containerVisibleBottom &&\n              elementRight > containerVisibleLeft &&\n              elementLeft < containerVisibleRight,\n          );\n  \n  \n        }\n      };\n  \n      // Attach the scroll event listener to the container\n      const container = containerRef.current;\n      if (container)\n        container.addEventListener('scroll', handleScroll);\n  \n      // Initial check\n      handleScroll();\n  \n      // Cleanup\n      return () => {\n        container?.removeEventListener('scroll', handleScroll);\n      };\n    }, [elementRef, containerRef]);\n  \n    return isInView;\n  };\n\n  export default useInView;","import { UserCircleIcon, UserIcon } from '@heroicons/react/24/outline';\nimport useInView from '@lib/hooks/useInView';\nimport type { ChecklistItemComments } from '@prisma/client';\nimport {\n  useFetcher,\n  useLoaderData,\n  useMatches,\n  useParams,\n} from '@remix-run/react';\nimport type { GetUserChecklistsResponse } from '@repositories/checklist.server';\nimport { initOpenTelemetry } from '@sentry/remix';\nimport { useEffect, useRef, useState } from 'react';\n\ntype MessageProps = {\n  message: MessageContainerProps['comments'][number];\n  containerRef: React.MutableRefObject<HTMLElement | null>;\n  loggedInUser: string;\n  markRead: () => void;\n};\nexport function Message({\n  message,\n  containerRef,\n  loggedInUser,\n  markRead,\n}: MessageProps) {\n  const itemRef = useRef<null | HTMLLIElement>(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const [viewStartTime, setViewStartTime] = useState<number | null>(null);\n\n  const isInView = useInView(itemRef, containerRef);\n  const [prevRead, setPrevRead] = useState([]);\n\n  const [intervalId, setIntervalId] = useState<number | null>(null);\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [intervalId]);\n\n  useEffect(() => {\n    if (isVisible && viewStartTime) {\n      const id = window.setInterval(() => {\n        const viewDuration = Date.now() - viewStartTime;\n        if (viewDuration >= 2000 && !message.readBy.includes(loggedInUser)) {\n          if (isMounted.current) {\n            try {\n              markRead();\n            } catch (error) {\n              console.error('Error in markRead:', error);\n            }\n          }\n          clearInterval(id);\n        }\n      }, 100);\n\n      setIntervalId(id);\n    } else {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    }\n  }, [isVisible, viewStartTime, message.readBy, loggedInUser, markRead]);\n\n  useEffect(() => {\n    if (isInView) {\n      if (!isVisible) {\n        setIsVisible(true);\n        setViewStartTime(Date.now());\n      }\n    } else {\n      if (isVisible) {\n        setIsVisible(false);\n        setViewStartTime(null);\n      }\n    }\n  }, [isInView, isVisible]);\n\n  const messageClass = () => {\n    if (message.postedById === loggedInUser) return 'bg-gray-300';\n    if (message.isDenied) return 'bg-red-400';\n    if (isInView && message.readBy.includes(loggedInUser)) return 'bg-blue-300';\n    if (isInView && !message.readBy.includes(loggedInUser))\n      return 'bg-blue-500';\n  };\n\n  return (\n    <li\n      className={`mb-1.5 flex ${message.postedById === loggedInUser ? 'justify-end' : 'justify-start'}`}\n      ref={itemRef}>\n      {message.postedById === loggedInUser ? (\n        <UserCircleIcon className=\"h-7 w-7 min-w-7 min-h-7 mr-2\" />\n      ) : (\n        <UserIcon className=\"h-7 w-7 min-w-7 min-h-7 mr-2\" />\n      )}\n      <div>\n        <div\n          className={`flex w-80 gap-2 px-2 py-0.5 rounded-br-md rounded-tr-md rounded-bl-md ${messageClass()}`}>\n          <div className=\"flex flex-col w-full\">\n            <div className=\"flex justify-between items-center\">\n              <p className=\"mr-2\">{message.postedBy?.name}</p>\n              <p className=\"text-sm text-gray-500\">\n                {new Date(message.datePosted).toLocaleString()}\n              </p>\n            </div>\n            <span className=\"\" style={{ overflowWrap: 'break-word' }}>\n              {message.message}\n            </span>\n          </div>\n        </div>\n        {/* <p className=\"text-end pr-2 text-gray-500 text-[10pt]\">Seen</p> */}\n      </div>\n    </li>\n  );\n}\ntype MessageContainerProps = {\n  loggedInUser: string;\n  comments: ChecklistItemComments[];\n  isModal?: boolean;\n};\nexport function MessageContainer({\n  loggedInUser,\n  comments,\n  status,\n  isModal = false,\n}: MessageContainerProps) {\n  const containerRef = useRef(null);\n  const markReadFetcher = useFetcher();\n\n  //const loaderData = useLoader();\n\n  //console.log(\"comments:   \", loaderData);\n\n  function handleMarkRead() {\n    let messageId: Array<number> = [];\n\n    //console.log(loggedInUser, comments)\n\n    comments.forEach((comment) => {\n      if (!comment.readBy.includes(loggedInUser)) {\n        //console.log('mark as read', comment.id)\n        messageId.push(comment.id);\n      }\n    });\n    // for(const item of messageId){\n    // }\n    const formData = new FormData();\n    formData.append('commentId', encodeURIComponent(JSON.stringify(messageId)));\n    formData.append('userId', loggedInUser);\n    formData.append('_action', 'markRead');\n    markReadFetcher.submit(formData, { method: 'POST' });\n  }\n\n  // useEffect(() => {\n  //   handleMarkRead()\n  // },[])\n  return (\n    <div\n      className={`${isModal ? 'max-h-[75vh] h-52 ' : 'rounded-xl '}min-h-20 overflow-auto bg-slate-200 shadow-inner border-[1px] border-slate-300`}\n      ref={containerRef}>\n      <ul className=\"p-2\">\n        {!comments || comments.length === 0 ? (\n          <li className=\"flex justify-center items-center h-full text-lg text-gray-500\">\n            No messages\n          </li>\n        ) : (\n          comments.map((message) => (\n            <Message\n              key={message.id}\n              message={message}\n              containerRef={containerRef}\n              loggedInUser={loggedInUser}\n              markRead={handleMarkRead}/>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n}\n"],"names":["UserCircleIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","useInView","elementRef","containerRef","isInView","setIsInView","useState","useEffect","handleScroll","container","element","containerRect","elementRect","scrollTop","scrollLeft","containerVisibleTop","containerVisibleLeft","containerVisibleBottom","containerVisibleRight","elementTop","elementLeft","elementBottom","elementRight","Message","message","loggedInUser","markRead","itemRef","useRef","isVisible","setIsVisible","viewStartTime","setViewStartTime","intervalId","setIntervalId","isMounted","id","error","messageClass","jsxs","jsx","UserIcon","_a","MessageContainer","comments","status","isModal","markReadFetcher","useFetcher","handleMarkRead","messageId","comment","formData"],"mappings":"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","x_google_ignoreList":[0]}