{"version":3,"file":"RegisterForm-BkuUGps-.js","sources":["../../../node_modules/@heroicons/react/24/solid/esm/ChevronLeftIcon.js","../../../app/components/ui/forms/RegisterForm.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.72 12.53a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 1 1 1.06 1.06L9.31 12l6.97 6.97a.75.75 0 1 1-1.06 1.06l-7.5-7.5Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import { OrgCombobox } from '@components/OrgCombobox';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/solid';\nimport type { AccountWithProfile, DefaultUserProfile } from '@lib/constants';\nimport { UserRank } from '@lib/constants';\nimport type { StringOrDate } from '@lib/types';\nimport { isInputType, isSelectType } from '@lib/utils';\nimport { MoveType, type Organization, Rank } from '@prisma/client';\nimport { useFetcher } from '@remix-run/react';\nimport type { OrganizationWithChildren } from '@repositories/organization.server';\nimport type { ErrorType } from '@routes/_auth+/register.queries.server';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport { AcceptButton, Button } from '../Buttons';\nimport ErrorReport from '../ErrorReport';\nimport { Input } from '../Input';\nimport { Transition } from '@headlessui/react';\n\ntype UserFormProps = {\n  orgs: StringOrDate<Pick<Organization, 'name' | 'uuid'>>[];\n  users?: Array<Pick<DefaultUserProfile, 'id' | 'name'>>;\n  account?: Omit<StringOrDate<AccountWithProfile>, 'password'>;\n  allRequired?: boolean;\n  btnAction: 'create' | 'update';\n  registerOrCreate: 'create' | 'register';\n  currentOrg?: Organization;\n  orgParentNode: OrganizationWithChildren;\n  orgFlatArray: Organization[];\n};\n\nexport type FetcherResponseType =\n  | { status: 'success' }\n  | {\n      status: 'error';\n      error: {\n        type: ErrorType;\n        message: string;\n      };\n    };\n\nconst RegisterForm = ({\n  orgs,\n  allRequired = true,\n  btnAction = 'create',\n  registerOrCreate = 'register',\n  currentOrg,\n  orgFlatArray,\n  orgParentNode,\n}: UserFormProps) => {\n  const tabs = ['userAccount', 'details', 'questionnaire', 'confirmation'];\n  const [activeTab, setActiveTab] = useState(tabs[0]);\n  const [confPassHasChanged, setConfPassHasChanged] = useState(false);\n\n  const initialValues = {\n    name: '',\n    rank: Rank.CIV,\n    dodId: '0000000000',\n    org: currentOrg?.uuid ?? orgFlatArray[0].uuid,\n    password: '',\n    confirmPassword: '',\n    personalPhone: '',\n    workPhone: '',\n    workEmail: '',\n    hasDependents: false,\n    isDormResident: false,\n    sponsorReach: false,\n    hasEFMP: false,\n    personalEmail: '',\n    emailDomain: 'us.af.mil',\n  };\n\n  const reducerFn = (\n    inputs: typeof initialValues,\n    action: {\n      type: 'changeText' | 'changeRadio';\n      value: string | boolean;\n      field: string;\n    }\n  ) => {\n    switch (action.type) {\n      case 'changeText':\n        return {\n          ...inputs,\n          [action.field]: action.value,\n        };\n      case 'changeRadio':\n        return {\n          ...inputs,\n          [action.field]: action.value,\n        };\n      default:\n        return {\n          ...inputs,\n          etc: action.value,\n        };\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducerFn, initialValues);\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  const [showMove, setShowMove] = useState(false);\n\n  const isDodIdValid = useCallback(() => {\n    const dodId = state.dodId;\n    return /^[0-9]{10}$/.test(dodId);\n  }, [state.dodId]);\n\n  const isPasswordValid = useCallback(() => {\n    console.log('checking password');\n    const password = state.password;\n\n    const hasNoSpaces = !/\\s/.test(password);\n    const isLongEnough = password.length >= 10;\n    return hasNoSpaces && isLongEnough;\n  }, [state.password]);\n\n  const isConfirmPasswordValid = useCallback(() => {\n    const confirmPassword = state.confirmPassword;\n\n    return (\n      confirmPassword !== '' &&\n      confirmPassword === state.password &&\n      isPasswordValid()\n    );\n  }, [isPasswordValid, state.confirmPassword, state.password]);\n\n  const isNameValid = useCallback(() => {\n    const trimmedName = state.name.trim();\n    const words = trimmedName.split(' ');\n    state.name = words\n      .map(\n        (word) =>\n          word.charAt(0).toUpperCase() + word.slice(1).toLocaleLowerCase()\n      )\n      .join(' ');\n\n    return words.length >= 2 && words.every((word) => word !== '');\n  }, [state]);\n\n  const isWorkEmailValid = useCallback(() => {\n    state.workEmail = state.workEmail.trim().toLocaleLowerCase();\n    const email = state.workEmail;\n\n    const maxEmailLength = 254;\n    if (email === '' || email.length > maxEmailLength) {\n      return false;\n    }\n\n    return !email.includes('@');\n  }, [state]);\n\n  const isFormValid = useCallback(() => {\n    console.log('checking form');\n    return (\n      state.org !== '' &&\n      state.workEmail !== '' &&\n      state.password !== '' &&\n      state.confirmPassword !== '' &&\n      state.name !== '' &&\n      isNameValid() &&\n      isWorkEmailValid() &&\n      isDodIdValid() &&\n      isPasswordValid() &&\n      isConfirmPasswordValid()\n    );\n  }, [isConfirmPasswordValid, isDodIdValid, isNameValid, isPasswordValid, isWorkEmailValid, state.confirmPassword, state.name, state.org, state.password, state.workEmail]);\n\n\n  const userAccountTabFirstInput = useRef<HTMLInputElement | null>(null);\n  const detailsTabFirstInput = useRef<HTMLInputElement | null>(null);\n  const questionTabFirstInput = useRef<HTMLInputElement | null>(null);\n  const summaryTabFirstInput = useRef<HTMLInputElement | null>(null);\n\n  useEffect(() => {\n    switch (activeTab) {\n      case 'userAccount':\n        if (userAccountTabFirstInput.current) {\n          userAccountTabFirstInput.current.focus();\n        }\n        break;\n      case 'details':\n        if (detailsTabFirstInput.current) {\n          detailsTabFirstInput.current.focus();\n        }\n        break;\n      case 'questionnaire':\n        if (questionTabFirstInput.current) {\n          questionTabFirstInput.current.focus();\n        }\n        break;\n      case 'confirmation':\n        break;\n    }\n  }, [activeTab]);\n\n  const handleTabClick = (tabIndex: string | number) => {\n    if (typeof tabIndex === 'number') {\n      if (tabIndex >= 0 && tabIndex < tabs.length) {\n        setActiveTab(() => {\n          return tabs[tabIndex];\n        });\n      }\n    } else if (typeof tabIndex === 'string') {\n      setActiveTab(tabIndex);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (isFormValid()) {\n      const currentIndex = tabs.indexOf(activeTab);\n      handleTabClick(currentIndex + 1);\n    }\n\n    if (buttonClicked) {\n      setButtonClicked(true);\n    }\n  };\n\n  const handlePreviousClick = () => {\n    const currentIndex = tabs.indexOf(activeTab);\n    handleTabClick(currentIndex - 1);\n  };\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    if (event.currentTarget.name && event.currentTarget.value !== undefined) {\n      const value =\n        event.currentTarget.name === 'workEmail'\n          ? event.currentTarget.value.toLocaleLowerCase()\n          : event.currentTarget.value;\n      dispatch({\n        type: 'changeText',\n        field: event.currentTarget.name,\n        value,\n      });\n      if (event.currentTarget.name === 'confirmPassword') {\n        setConfPassHasChanged(true);\n      }\n    }\n  };\n\n  const handleRadioChange = (field: string, value: boolean | string) => {\n    dispatch({ type: 'changeRadio', field, value });\n  };\n\n  function handleKeyUp(e: React.KeyboardEvent<HTMLFormElement>) {\n    if (e.key === 'Enter') {\n      if (activeTab === 'confirmation') {\n        handleSubmit();\n      } else {\n        handleNextClick();\n      }\n    }\n  }\n\n  const handleSubmit = () => {\n    // const { confirmPassword, ...rest } = state;\n    if (!isFormValid()) {\n      return;\n    }\n    fetcher.submit(\n      {\n        ...state,\n      },\n      { method: 'POST' }\n    );\n  };\n\n  const fetcher = useFetcher<FetcherResponseType>();\n\n  return (\n    <>\n      {fetcher.data?.status === 'error' && (\n        <div className=\"bg-red-700/80 rounded-lg my-5 py-2 text-slate-100 font-bold text-lg text-center\">\n          {Array.isArray(fetcher.data.error)\n            ? fetcher.data.error.map((err) => err.message)\n            : fetcher.data.error.message}\n        </div>\n      )}\n      <ol className=\"mt-5 flex items-center w-full text-sm font-medium text-center text-black mb-5\">\n        <li className=\"flex md:w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-gray-200 after:border-1 after:hidden sm:after:inline-block after:mx-6 xl:after:mx-10 dark:after:border-gray-700\">\n          <span className=\"flex items-center after:content-['/'] sm:after:hidden after:mx-2 after:text-gray-200 dark:after:text-gray-500\">\n            <Button\n              onClick={() => handleTabClick('userAccount')}\n              name=\"userAccount\"\n              className={`${activeTab === 'userAccount' ? ' bg-zinc-700 text-white' : ''} whitespace-nowrap`}>\n              Account Information\n            </Button>\n          </span>\n        </li>\n        <li className=\"flex md:w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-gray-200 after:border-1 after:hidden sm:after:inline-block after:mx-6 xl:after:mx-10 dark:after:border-gray-700\">\n         \n        </li>\n        <li className=\"flex md:w-full items-center after:content-[''] after:w-full after:h-1 after:border-b after:border-gray-200 after:border-1 after:hidden sm:after:inline-block after:mx-6 xl:after:mx-10 dark:after:border-gray-700\">\n          <span className=\"flex items-center after:content-['/'] sm:after:hidden after:mx-2 after:text-gray-200 dark:after:text-gray-500\">\n            <Button\n              disabled={!isFormValid()}\n              onClick={() => handleTabClick('questionnaire')}\n              name=\"questionnaire\"\n              className={`whitespace-nowrap ${activeTab === 'questionnaire' ? ' bg-zinc-700 text-white' : ''} ${isFormValid() ? '' : 'cursor-not-allowed disabled'}`}>\n              Questionnaire\n            </Button>\n          </span>\n        </li>\n        <li className=\"flex items-center\">\n          <Button\n            disabled={!isFormValid()}\n            onClick={() => handleTabClick('confirmation')}\n            className={`whitespace-nowrap ${activeTab === 'confirmation' ? ' bg-zinc-700 text-white' : ''} ${isFormValid() ? '' : 'cursor-not-allowed disabled'}`}>\n            Confirmation\n          </Button>\n        </li>\n      </ol>\n      <fetcher.Form\n        method=\"post\"\n        className=\"flex flex-col lg:h-[600px] pt-5\"\n        id=\"registerForm\"\n        onKeyUp={handleKeyUp}>\n        {activeTab === 'userAccount' && (\n          <div className=\"grid mx-auto w-3/5 px-10 py-5 rounded-lg border border-1 shadow-lg\">\n            <h2 className=\"text-xl text-center font-bold mt-5 mb-5\">\n              Account Infomation\n            </h2>\n            <div className=\"mb-2\">\n              <label className=\"block mb-1 text-sm font-medium text-black\">\n                Select Rank\n              </label>\n              <select\n                name=\"rank\"\n                ref={userAccountTabFirstInput}\n                defaultValue={state.rank}\n                onChange={handleChange}\n                className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 disabled:cursor-not-allowed disabled:bg-gray-50\">\n                {Object.entries(UserRank).map((item, index) => (\n                  <option key={index} value={item[0]}>\n                    {item[1].name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"mb-2\">\n              <Input.TextWithValidation\n                label=\"Full Name\"\n                type=\"text\"\n                validationFn={isNameValid}\n                validationMsg=\"Please enter a valid First and Last name\"\n                name=\"name\"\n                value={state.name}\n                onChange={handleChange}\n                required={true}/>\n            </div>\n            {/* <div className=\"mb-2 hidden\">\n             <label\n             htmlFor=\"text\"\n             className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n             DOD ID Number\n             </label>\n             <input\n             type=\"text\"\n             id=\"dod\"\n             name=\"dodId\"\n             value={state.dodId}\n             onChange={handleChange}\n             className={`bg-gray-50 border border-gray-300 text-gray-500 text-sm rounded-lg block w-full p-2.5 placeholder:text-black ${buttonClicked && !isDodIdValid() ? 'border border-red-500' : ''}`}\n             pattern=\"[0-9]{10}\"\n             required={allRequired} />\n             </div>\n             {!isDodIdValid() && buttonClicked ? <p className=\"text-red-500\">Please enter your valid DOD ID number</p> : null} */}\n            {/* <div className=\"mb-2\">\n             <label\n             htmlFor=\"email\"\n             className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n             Official Email address\n             </label>\n             <input\n             type=\"email\"\n             id=\"workEmail\"\n             name=\"workEmail\"\n             className={`placeholder:text-black bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 ${state.workEmail !== '' && (isWorkEmailValid() ? 'border border-green-500 shadow-[0_0_2px_1px_rgba(34,197,94,0.8)]' : 'border border-red-500 shadow-[0_0_2px_1px_rgba(235,10,10,0.5)]')}`}\n             value={state.workEmail}\n             onChange={handleChange}\n             required={allRequired} />\n             {state.workEmail !== '' && (!isWorkEmailValid() ? <p className=\"text-red-500\">Please enter a valid .mil email address.</p> : null)}\n             </div> */}\n            <div className=\"mb-2\">\n              <Input.TextInlineSelectWithValidation\n                label=\"Official Email Address\"\n                validationFn={isWorkEmailValid}\n                validationMsg=\"Please enter the beginning of your email address (first_name.last_name).\"\n                onSelectChange={handleChange}\n                name=\"workEmail\"\n                value={state.workEmail}\n                onChange={handleChange}\n                required={true}></Input.TextInlineSelectWithValidation>\n              <p className=\"text-sm mt-2\">\n                If your domain is missing please let us know{' '}\n                <a\n                  href=\"https://travisspark.atlassian.net/servicedesk/customer/portal/4/group/8/create/10032\"\n                  target=\"_blank\"\n                  className=\"underline\"\n                  rel=\"noreferrer\">\n                  here\n                </a>\n                .\n              </p>\n            </div>\n            {!currentOrg && (\n              <>\n                <hr className=\"my-4 h-px border-0 bg-gray-300\" />\n                <div className=\"mb-2\">\n                  <OrgCombobox\n                    name=\"org\"\n                    parentNode={orgParentNode}\n                    selected={orgFlatArray.find(org => org.uuid === state.org) ?? orgFlatArray[0]}\n                    orgArray={orgFlatArray}\n                    onChange={handleChange}\n                    isCreateAccountPage={true}\n                    label=\"Select Organization:\"/>\n                </div>\n              </>\n            )}\n            <hr className=\"my-4 h-px border-0 bg-gray-300\" />\n            <div className=\"mb-2\">\n              <Input.TextWithValidation\n                label=\"Password\"\n                type=\"password\"\n                validationFn={isPasswordValid}\n                validationMsg=\"The password needs a minimum of 10 characters.\"\n                name=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required={true} />\n            </div>\n            <div className=\"mb-2\">\n              <Input.TextWithValidation\n                label=\"Confirm Password\"\n                type=\"password\"\n                validationFn={isConfirmPasswordValid}\n                validationMsg=\"The passwords must match.\"\n                name=\"confirmPassword\"\n                value={state.confirmPassword}\n                onChange={handleChange}\n                required={true} />\n            </div>\n          </div>\n        )}\n        {activeTab === 'details' && (\n          <div className=\"grid mx-auto w-3/5 px-10 py-5 rounded-lg border border-1 shadow-lg\">\n           \n            <div className=\"mb-2\">\n              <label\n                htmlFor=\"phone\"\n                className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                Work Phone number (Optional)\n                <span className=\"text-xs\" />\n              </label>\n              <input\n                type=\"tel\"\n                id=\"workPhone\"\n                name=\"workPhone\"\n                className=\"placeholder:text-black bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5\"\n                onChange={handleChange}\n                value={state.workPhone}\n                pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                required={allRequired}/>\n            </div>\n      \n            <div className=\"mb-2\">\n              <label\n                htmlFor=\"bio\"\n                className=\"block mb-1 text-sm font-medium text-gray-900 dark:text-black\">\n                Biography (Optional)\n              </label>\n              <textarea\n                id=\"bio\"\n                name=\"bio\"\n                className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5\"/>\n            </div>\n          </div>\n        )}\n        {activeTab === 'questionnaire' && (\n          <div className=\"grid mx-auto w-3/5 px-10 py-5 rounded-lg border border-1 shadow-lg\">\n            <h2 className=\"text-xl text-center font-bold mt-5 mb-5\">\n              Questionnaire\n            </h2>\n\n            <div className=\"mb-2\">\n              <h1>Are you currently a dorm resident?</h1>\n              <input\n                type=\"radio\"\n                ref={questionTabFirstInput}\n                id=\"dormResidentYes\"\n                name=\"isDormResident\"\n                defaultChecked={state.isDormResident}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, true)}\n                required={allRequired}/>\n              <label className=\"ml-1\" htmlFor=\"dormResidentYes\">\n                Yes\n              </label>\n              <input\n                className=\"ml-3\"\n                type=\"radio\"\n                id=\"dormResidentNo\"\n                name=\"isDormResident\"\n                defaultChecked={!state.isDormResident}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, false)}\n                required={allRequired}/>\n              <label className=\"ml-1\" htmlFor=\"dormResidentNo\">\n                No\n              </label>\n            </div>\n\n            <div className=\"mb-2\">\n              <h1>Do you currently have any dependents?</h1>\n              <input\n                type=\"radio\"\n                id=\"hasDependentsYes\"\n                name=\"hasDependents\"\n                defaultChecked={state.hasDependents}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, true)}\n                required={allRequired}/>\n              <label className=\"ml-1\" htmlFor=\"hasDependentsYes\">\n                Yes\n              </label>\n              <input\n                className=\"ml-3\"\n                type=\"radio\"\n                id=\"hasDependentsNo\"\n                name=\"hasDependents\"\n                defaultChecked={!state.hasDependents}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, false)}\n                required={allRequired}/>\n              <label className=\"ml-1\" htmlFor=\"hasDependentsNo\">\n                No\n              </label>\n            </div>\n\n            {/* <div className=\"mb-2\">\n              <h1>Have you been contacted by your sponsor?</h1>\n              <input\n                type=\"radio\"\n                id=\"sponsorContactYes\"\n                name=\"sponsorReach\"\n                defaultChecked={state.sponsorReach}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, true)} />\n              <label\n                className=\"ml-1\"\n                htmlFor=\"sponsorContactYes\">Yes</label>\n              <input\n                className=\"ml-3\"\n                type=\"radio\"\n                id=\"sponsorContactNo\"\n                name=\"sponsorReach\"\n                defaultChecked={!state.sponsorReach}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, false)} />\n              <label\n                className=\"ml-1\"\n                htmlFor=\"sponsorContactNo\">No</label>\n            </div> */}\n\n            <div className=\"mb-2\">\n              <h1>\n                Is any member of your family enrolled in the Exceptional Family\n                Member Program (EFMP)?*\n              </h1>\n              <div className=\"text-xs mb-1\">\n                <p>\n                  *Service members on active duty enroll in the program if they\n                  have a Family member with a physical, emotional,\n                  developmental, or intellectual disorder requiring specialized\n                  services so their needs can be considered in the military\n                  personnel assignment process.\n                </p>\n              </div>\n              <input\n                type=\"radio\"\n                id=\"hasEFMPYes\"\n                name=\"hasEFMP\"\n                defaultChecked={state.hasEFMP}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, true)}/>\n              <label className=\"ml-1\" htmlFor=\"hasEFMPYes\">\n                Yes\n              </label>\n\n              <input\n                className=\"ml-3\"\n                type=\"radio\"\n                id=\"hasEFMPNo\"\n                name=\"hasEFMP\"\n                defaultChecked={!state.hasEFMP}\n                onChange={(e) => handleRadioChange(e.currentTarget.name, false)}/>\n              <label className=\"ml-1\" htmlFor=\"hasEFMPNo\">\n                No\n              </label>\n            </div>\n            <div></div>\n          </div>\n        )}\n        {activeTab === 'confirmation' && (\n          <div className=\"container grid grid-cols-3\">\n            <div className=\"col-start-2 text-xl text-center font-bold mt-5 mb-5\">\n              <h2>\n                {registerOrCreate === 'create'\n                  ? 'Confirm Information'\n                  : 'Confirm Your Information'}\n              </h2>\n            </div>\n            <div className=\"col-start-2 rounded-lg border border-neutral mx-auto w-[510px]\">\n              <table className=\"table w-full \">\n                <tbody>\n                  <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">Rank:</td>\n                    <td className=\"font-bold py-2 pr-2\">\n                      {UserRank[state.rank].name}\n                    </td>\n                  </tr>\n                  <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">Name:</td>\n                    <td className={`font-bold py-2 pr-2`}>{state.name}</td>\n                  </tr>\n                  {!currentOrg && (\n                    <tr className=\"border-b even:bg-zinc-100\">\n                      <td className=\"pl-2 py-2\">Organization:</td>\n                      <td className=\"font-bold py-2 pr-2\">\n                        {orgs.filter((org) => org.uuid === state.org)[0]?.name}\n                      </td>\n                    </tr>\n                  )}\n                  {/* <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">DoD ID:</td>\n                    <td className={`font-bold py-2 pr-2`}>{state.dodId ? '':'n/a'}</td>\n                  </tr> */}\n                  <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">Official Email:</td>\n                    <td className={`font-bold py-2 pr-2`}>\n                      {state.workEmail}@{state.emailDomain}\n                    </td>\n                  </tr>\n                \n                  {state.workPhone && (\n                    <tr className=\"border-b even:bg-zinc-100\">\n                      <td className=\"pl-2 py-2\">Work Phone:</td>\n                      <td className=\"font-bold py-2 pr-2\">{state.workPhone}</td>\n                    </tr>\n                  )}\n              \n                  {/* <tr className=\"border-b even:bg-zinc-100\">\n                     <td className=\"pl-2 py-2\">Biography:</td>\n                     <td className=\"font-bold py-2 pr-2\">Add your biography content here</td>\n                  </tr> */}\n                  <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">\n                      Are {registerOrCreate === 'create' ? 'they' : 'you'}{' '}\n                      currently a dorm resident?\n                    </td>\n                    <td className=\"font-bold py-2 pr-2\">\n                      {state.isDormResident ? 'Yes' : 'No'}\n                    </td>\n                  </tr>\n                  <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">\n                      Do {registerOrCreate === 'create' ? 'they' : 'you'}{' '}\n                      currently have any dependents?\n                    </td>\n                    <td className=\"font-bold py-2 pr-2\">\n                      {state.hasDependents ? 'Yes' : 'No'}\n                    </td>\n                  </tr>\n                  {/* <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">Have you been contacted by your sponsor?</td>\n                    <td className=\"font-bold py-2 pr-2\">{state.sponsorReach ? 'Yes' : 'No'}</td>\n                  </tr> */}\n                  <tr className=\"border-b even:bg-zinc-100\">\n                    <td className=\"pl-2 py-2\">\n                      Do {registerOrCreate === 'create' ? 'they' : 'you'}{' '}\n                      qualify for EFMP?\n                    </td>\n                    <td className=\"font-bold py-2 pr-2\">\n                      {state.hasEFMP ? 'Yes' : 'No'}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <Transition show={registerOrCreate === 'create'}>\n              <div className=\"col-start-2 my-5 justify-self-center\">\n                <Input.Checkbox\n                  name=\"assignChecklist\"\n                  onChange={(e) => {\n                    setShowMove((prev) => {\n                      handleRadioChange(\n                        'moveType',\n                        !prev ? MoveType.PCS : undefined\n                      );\n                      return !prev;\n                    });\n                    console.log(e.target.checked);\n                    handleRadioChange(e.target.name, e.target.checked);\n                  }}\n                  defaultChecked={showMove}\n                  variant=\"textLg\"\n                  label={`Would you like to assign a checklist to ${state.name}?`}/>\n                <Transition\n                  show={showMove}\n                  as=\"div\"\n                  enter=\"transition duration-200\"\n                  enterFrom=\"opacity-0 -translate-y-10\"\n                  enterTo=\"opacity-100 translate-y-0\"\n                  leaveTo=\"opacity-0 -translate-y-10\"\n                  leave=\"transition duration-200\">\n                  <p className=\"mb-2 text-base text-center text-zinc-600\">\n                    What type of checklist would you like to assign?\n                  </p>\n                  <div className=\"flex gap-10 justify-center\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"moveType\"\n                        value=\"PCS\"\n                        required={showMove}\n                        onChange={(e) =>\n                          handleRadioChange('moveType', MoveType.PCS)\n                        }\n                        defaultChecked={true}\n                        id=\"pcsMoveType\"\n                        className=\"border sr-only peer border-zinc-400 rounded px-6\"/>\n                      <span className=\"border hover:bg-blue-200 hover:cursor-pointer peer-checked:text-white border-zinc-400 rounded-lg px-6 py-1 text-sm peer select-none peer-checked:bg-blue-500 peer-checked:font-bold font-medium text-gray-900 dark:text-gray-300\">\n                        PCS\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"moveType\"\n                        value=\"PCA\"\n                        required={showMove}\n                        onChange={(e) =>\n                          handleRadioChange('moveType', MoveType.PCA)\n                        }\n                        id=\"pcaMoveType\"\n                        className=\"border sr-only peer border-zinc-400 rounded px-6\"/>\n                      <span className=\"border hover:bg-blue-200 hover:cursor-pointer peer-checked:text-white border-zinc-400 rounded-lg px-6 py-1 text-sm peer select-none peer-checked:bg-blue-500 peer-checked:font-bold font-medium text-gray-900 dark:text-gray-300\">\n                        PCA\n                      </span>\n                    </label>\n                  </div>\n                </Transition>\n              </div>\n            </Transition>\n            <div className=\"col-start-2 mt-20\">\n              <AcceptButton\n                className=\"bg-green-400 w-full\"\n                ref={summaryTabFirstInput}\n                name=\"_action\"\n                value={btnAction}\n                type=\"button\"\n                onClick={handleSubmit}>\n                Submit\n              </AcceptButton>\n            </div>\n          </div>\n        )}\n      </fetcher.Form>\n      <div className=\"flex justify-between w-full mt-20\">\n        <div>\n          <Button\n            onClick={handlePreviousClick}\n            disabled={activeTab === 'userAccount'}\n            className=\"inline-flex items-center\"\n            name=\"previous\"\n            type=\"button\">\n            <ChevronLeftIcon className=\"h-5 w-5\"></ChevronLeftIcon> Previous\n          </Button>\n        </div>\n        <div>\n          <Button\n            onClick={() => {\n              setButtonClicked(true);\n              handleNextClick();\n            }}\n            disabled={!isFormValid() || activeTab === 'confirmation'}\n            className={`inline-flex items-center ${isFormValid() && !buttonClicked ? '' : 'bg-blue-500'}`}\n            name=\"next\"\n            type=\"button\">\n            Next <ChevronRightIcon className=\"h-5 w-5\"></ChevronRightIcon>\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const ErrorBoundary = ErrorReport;\nexport default RegisterForm;\n"],"names":["ChevronLeftIcon","title","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","RegisterForm","orgs","allRequired","btnAction","registerOrCreate","currentOrg","orgFlatArray","orgParentNode","tabs","activeTab","setActiveTab","useState","confPassHasChanged","setConfPassHasChanged","initialValues","Rank","reducerFn","inputs","action","state","dispatch","useReducer","buttonClicked","setButtonClicked","showMove","setShowMove","isDodIdValid","useCallback","dodId","isPasswordValid","password","hasNoSpaces","isLongEnough","isConfirmPasswordValid","confirmPassword","isNameValid","words","word","isWorkEmailValid","email","isFormValid","userAccountTabFirstInput","useRef","detailsTabFirstInput","questionTabFirstInput","summaryTabFirstInput","useEffect","handleTabClick","tabIndex","handleNextClick","currentIndex","handlePreviousClick","handleChange","event","value","handleRadioChange","field","handleKeyUp","e","handleSubmit","fetcher","useFetcher","jsxs","Fragment","_a","jsx","err","Button","UserRank","item","index","Input","OrgCombobox","org","Transition","prev","MoveType","AcceptButton","ChevronRightIcon"],"mappings":"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","x_google_ignoreList":[0]}