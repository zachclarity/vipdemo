{"version":3,"file":"comments-_sTngPN-.js","sources":["../../../app/routes/_withNav+/_noSideBar+/checklist.$itemId+/comments.tsx"],"sourcesContent":["import ErrorReport from '@components/ui/ErrorReport';\nimport { MessageContainer } from '@components/ui/Message';\nimport useMatchesData, {\n  type ChecklistLayoutData,\n  useChecklistLayoutData,\n  useRootLayoutData,\n} from '@lib/hooks/useMatchesData';\nimport {\n  Outlet,\n  useFetcher,\n  useLoaderData,\n  useMatches,\n  useOutletContext,\n  useParams,\n} from '@remix-run/react';\nimport { getChecklistItem } from '@routes/_withNav+/_withSideBar+/.server/tasks.queries';\nimport { requireUser } from '@services/user.server';\nimport { useState } from 'react';\nimport type { ActionFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { Attribute } from '@lib/utils';\nimport { AuthorizationError } from 'remix-auth';\nimport { jsonWithError } from 'remix-toast';\nimport { z } from 'zod';\nimport { sendMessage, markRead } from '../.server/checklist.queries';\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const cookieUserId = await requireUser(request);\n\n  const updateTaskSchema = z.object({\n    itemId: z.string().optional(),\n    postedById: z.string().optional(),\n    userId: z.literal(cookieUserId).optional(),\n    internal: z\n      .enum(['true', 'false'])\n      .transform((value) => value === 'true')\n      .optional(),\n    content: z.string().optional(),\n    commentId: z.string().optional(),\n    _action: z.union([z.literal('send'), z.literal('markRead')]),\n  });\n\n  try {\n    const {\n      itemId,\n      userId,\n      _action,\n      content,\n      postedById,\n      internal,\n      commentId,\n    } = updateTaskSchema.parse(\n      Object.fromEntries((await request.formData()).entries())\n    );\n\n    if (_action === 'send') {\n      await sendMessage(itemId, postedById ?? '', content ?? '', internal);\n      return json({ status: 'success' }, {\n        headers: {\n          'X-Frame-Options': 'SAMEORIGIN',\n        },\n      });\n    }\n\n    if (_action === 'markRead' && commentId) {\n      const items: number[] = Array.from(\n        JSON.parse(decodeURIComponent(commentId))\n      );\n      await markRead(items, userId as string);\n      return json({ status: 'success' }, {\n        headers: {\n          'X-Frame-Options': 'SAMEORIGIN',\n        },\n      });\n    }\n  } catch (error) {\n    console.error('Error during approval: ', error);\n    if (error instanceof Error) {\n      if (error instanceof AuthorizationError) {\n        return jsonWithError(\n          { status: 'error', error: 'Authorization Error.' },\n          'User is not authorized.',\n          {\n            headers: {\n              'X-Frame-Options': 'SAMEORIGIN',\n            },\n          }\n        );\n      }\n      return jsonWithError(\n        { status: 'error', error: 'Failed to approve task' },\n        'There was an error.',\n        {\n          headers: {\n            'X-Frame-Options': 'SAMEORIGIN',\n          },\n        }\n      );\n    }\n  }\n}\n\nexport default function ChecklistSlideOutComments() {\n  const { item, comments, loggedInUser } = useOutletContext<ChecklistLayoutData>();\n\n  const sendMessageFetcher = useFetcher();\n  const [messageContent, setMessageContent] = useState('');\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMessageContent(event.target.value);\n  };\n\n  const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    sendMessageFetcher.submit(event.target as HTMLFormElement);\n    setMessageContent('');\n  };\n\n  return (\n    <div className=\"col-span-2 my-3 mx-5 grid grid-rows-[1fr_auto]\">\n      <div className=\"grid grid-rows-[auto_1fr_3rem] gap-3 overflow-y-scroll min-h-40\">\n        <h4 className=\"font-bold text-xl\">Comments</h4>\n        <MessageContainer\n          loggedInUser={loggedInUser}\n          comments={comments}\n          status={item.dateCompleted} />\n      <sendMessageFetcher.Form onSubmit={handleFormSubmit} method=\"POST\">\n        <input type=\"hidden\" value={item?.id} name=\"itemId\" />\n        <input type=\"hidden\" value={loggedInUser} name=\"userId\" />\n        <input type=\"hidden\" value={loggedInUser} name=\"postedById\" />\n        <input type=\"hidden\" name=\"_action\" value=\"send\" />\n        <div className=\"flex gap-2\">\n          <input\n            type=\"text\"\n            name=\"content\"\n            className=\"block w-full rounded p-2 text-sm border\"\n            placeholder=\"Type a message\"\n            value={messageContent}\n            onChange={handleInputChange}\n            required/>\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 text-white py-2 px-4 rounded w-40\">\n            Send\n          </button>\n        </div>\n      </sendMessageFetcher.Form>\n      </div>\n    </div>\n  );\n}\n\nexport const ErrorBoundary = ErrorReport;\n"],"names":["ChecklistSlideOutComments","item","comments","loggedInUser","useOutletContext","sendMessageFetcher","useFetcher","messageContent","setMessageContent","useState","handleInputChange","event","target","value","handleFormSubmit","preventDefault","submit","className","children","jsxs","jsx","MessageContainer","status","dateCompleted","Form","onSubmit","method","type","id","name","placeholder","onChange","required","ErrorBoundary","ErrorReport"],"mappings":"qkBAsGA,SAAwBA,GAA4B,CAClD,KAAM,CAAEC,KAAAA,EAAMC,SAAAA,EAAUC,aAAAA,GAAiBC,EAAsC,EAEzEC,EAAqBC,EAAW,EAChC,CAACC,EAAgBC,CAAiB,EAAIC,EAAAA,SAAS,EAAE,EAEjDC,EAAqBC,GAA+C,CACtDH,EAAAG,EAAMC,OAAOC,KAAK,CACtC,EAEMC,EAAmB,MAAOH,GAA4C,CAC1EA,EAAMI,eAAe,EACFV,EAAAW,OAAOL,EAAMC,MAAyB,EACzDJ,EAAkB,EAAE,CACtB,EAEA,aACG,MAAI,CAAAS,UAAU,iDACbC,SAACC,EAAA,KAAA,MAAA,CAAIF,UAAU,kEACbC,SAAA,CAACE,EAAA,IAAA,KAAA,CAAGH,UAAU,oBAAoBC,SAAQ,UAAA,CAAA,EAC1CE,EAAA,IAACC,EAAA,CACClB,aAAAA,EACAD,SAAAA,EACAoB,OAAQrB,EAAKsB,cAAe,SAC/BlB,EAAmBmB,KAAnB,CAAwBC,SAAUX,EAAkBY,OAAO,OAC1DR,SAAA,CAAAE,EAAA,IAAC,SAAMO,KAAK,SAASd,MAAOZ,GAAAA,YAAAA,EAAM2B,GAAIC,KAAK,QAAS,CAAA,QACnD,QAAM,CAAAF,KAAK,SAASd,MAAOV,EAAc0B,KAAK,QAAS,CAAA,QACvD,QAAM,CAAAF,KAAK,SAASd,MAAOV,EAAc0B,KAAK,YAAa,CAAA,QAC3D,QAAM,CAAAF,KAAK,SAASE,KAAK,UAAUhB,MAAM,MAAO,CAAA,EACjDM,EAAA,KAAC,MAAI,CAAAF,UAAU,aACbC,SAAA,CAAAE,EAAA,IAAC,QAAA,CACCO,KAAK,OACLE,KAAK,UACLZ,UAAU,0CACVa,YAAY,iBACZjB,MAAON,EACPwB,SAAUrB,EACVsB,SAAQ,EAAA,CAAA,EACVZ,EAAA,IAAC,SAAA,CACCO,KAAK,SACLV,UAAU,gDAAgDC,SAAA,MAAA,CAE5D,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACA,CAAA,CACF,CAAA,CAEJ,CAEO,MAAMe,EAAgBC"}