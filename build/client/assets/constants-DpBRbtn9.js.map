{"version":3,"file":"constants-DpBRbtn9.js","sources":["../../../app/lib/constants.ts"],"sourcesContent":["// Any extra types or global constants go here\nimport type { BasicRoleInfo } from '@lib/types';\nimport type { Organization, Rank } from '@prisma/client';\nimport { Prisma } from '@prisma/client';\n\nexport enum ChecklistType {\n  PCS = 'PCS',\n  PCA = 'PCA',\n  SQ = 'SQ',\n}\n\nexport type UserRankType = {\n  [key in Rank]: { name: string; abb: string, order: number };\n};\n\nexport const UserRank: UserRankType = {\n  CIV: { name: 'Civilian', abb: 'Civ', order: 0 },\n  AB: { name: 'Airman Basic', abb: 'AB', order: 1 },\n  AMN: { name: 'Airman', abb: 'Amn', order: 2 },\n  A1C: { name: 'Airman First Class', abb: 'A1C', order: 3 },\n  SRA: { name: 'Senior Airman', abb: 'SrA', order: 4 },\n  SSGT: { name: 'Staff Sergeant', abb: 'SSgt', order: 5 },\n  TSGT: { name: 'Technical Sergeant', abb: 'TSgt', order: 6 },\n  MSGT: { name: 'Master Sergeant', abb: 'MSgt', order: 7 },\n  SMSGT: { name: 'Senior Master Sergeant', abb: 'SMSgt', order: 8 },\n  CMSgt: { name: 'Chief Master Sergeant', abb: 'CMSgt', order: 9 },\n  LT2: { name: '2nd Lieutenant', abb: '2d Lt', order: 10 },\n  LT1: { name: '1st Lieutenant', abb: '1st Lt', order: 11 },\n  CAPT: { name: 'Captain', abb: 'Capt', order: 12 },\n  MAJ: { name: 'Major', abb: 'Maj', order: 13 },\n  LTCOL: { name: 'Lieutenant Colonel', abb: 'Lt Col', order: 14 },\n  COL: { name: 'Colonel', abb: 'Col', order: 15 },\n  BGEN: { name: 'Brigadier General', abb: 'Brig Gen', order: 16 },\n  MGEN: { name: 'Major General', abb: 'Maj Gen', order: 17 },\n  LTGEN: { name: 'Lieutenant General', abb: 'Lt Gen', order: 18 },\n  GEN: { name: 'General', abb: 'Gen', order: 19 },\n};\n\ntype UserSelectOptions = {\n  includeMetadata?: boolean;\n  includeVerified?: boolean;\n  includeRoles?: boolean;\n  includePendingOrgs?: boolean;\n};\n\n// Width constants\nexport const TailwindWidth = {\n  W_0: 'w-0',\n  W_PX: 'w-px',\n  W_0_5: 'w-0.5',\n  W_1: 'w-1',\n  W_1_5: 'w-1.5',\n  W_2: 'w-2',\n  W_2_5: 'w-2.5',\n  W_3: 'w-3',\n  W_3_5: 'w-3.5',\n  W_4: 'w-4',\n  W_5: 'w-5',\n  W_6: 'w-6',\n  W_7: 'w-7',\n  W_8: 'w-8',\n  W_9: 'w-9',\n  W_10: 'w-10',\n  W_11: 'w-11',\n  W_12: 'w-12',\n  W_14: 'w-14',\n  W_16: 'w-16',\n  W_20: 'w-20',\n  W_24: 'w-24',\n  W_28: 'w-28',\n  W_32: 'w-32',\n  W_36: 'w-36',\n  W_40: 'w-40',\n  W_44: 'w-44',\n  W_48: 'w-48',\n  W_52: 'w-52',\n  W_56: 'w-56',\n  W_60: 'w-60',\n  W_64: 'w-64',\n  W_72: 'w-72',\n  W_80: 'w-80',\n  W_96: 'w-96',\n  W_AUTO: 'w-auto',\n  'W_1/2': 'w-1/2',\n  'W_1/3': 'w-1/3',\n  'W_2/3': 'w-2/3',\n  'W_1/4': 'w-1/4',\n  'W_2/4': 'w-2/4',\n  'W_3/4': 'w-3/4',\n  'W_1/5': 'w-1/5',\n  'W_2/5': 'w-2/5',\n  'W_3/5': 'w-3/5',\n  'W_4/5': 'w-4/5',\n  'W_1/6': 'w-1/6',\n  'W_2/6': 'w-2/6',\n  'W_3/6': 'w-3/6',\n  'W_4/6': 'w-4/6',\n  'W_5/6': 'w-5/6',\n  'W_1/12': 'w-1/12',\n  'W_2/12': 'w-2/12',\n  'W_3/12': 'w-3/12',\n  'W_4/12': 'w-4/12',\n  'W_5/12': 'w-5/12',\n  'W_6/12': 'w-6/12',\n  'W_7/12': 'w-7/12',\n  'W_8/12': 'w-8/12',\n  'W_9/12': 'w-9/12',\n  'W_10/12': 'w-10/12',\n  'W_11/12': 'w-11/12',\n  W_FULL: 'w-full',\n  W_SCREEN: 'w-screen',\n  W_MIN: 'w-min',\n  W_MAX: 'w-max',\n  W_FIT: 'w-fit',\n} as const;\n\n// Text align constants\nexport const TailwindTextAlign = {\n  LEFT: 'text-left',\n  CENTER: 'text-center',\n  RIGHT: 'text-right',\n  JUSTIFY: 'text-justify',\n  START: 'text-start',\n  END: 'text-end',\n} as const;\n\nexport const includeRoleInfo = {\n  include: {\n    role: {\n      select: {\n        id: true,\n        uuid: true,\n        name: true,\n        description: true,\n        abbreviation: true,\n        permissions: true,\n      },\n    },\n  },\n};\n\nexport const userAssignedOrgSelect = {\n  select: {\n    id: true,\n    name: true,\n    parentOrgId: true,\n    base: true,\n  },\n};\n\nexport const userProfileSelect = (options?: UserSelectOptions) => {\n  const { includeMetadata, includeVerified, includePendingOrgs } =\n    options ?? {};\n  return {\n    createdAt: includeMetadata ?? false,\n    updatedAt: includeMetadata ?? false,\n    emailVerified: includeVerified ?? false,\n    id: true,\n    dodId: true,\n    cssVerified: includeVerified ?? false,\n    name: true,\n    rank: true,\n    workEmail: true,\n    requestedOrg: true,\n    personalEmail: true,\n    personalPhone: true,\n    workPhone: true,\n    // sponsor: {\n    //   select: { id: true },\n    // },\n    // supervisor: {\n    //   select: { id: true },\n    // },\n    image: true,\n    isDormResident: true,\n    hasDependents: true,\n    sponsorReach: true,\n    hasEFMP: true,\n    hasGraduated: true,\n    isDeleted: true,\n    orgRoles: {\n      include: {\n        orgRole: {\n          include: {\n            role: true,\n          },\n        },\n      },\n    },\n    currentOrg: {\n      select: {\n        uuid: true,\n        name: true,\n        parentOrgId: true,\n        base: true,\n      },\n    },\n    previousOrg: includePendingOrgs\n      ? { ...userAssignedOrgSelect }\n      : { select: { uuid: true } },\n    nextOrg: includePendingOrgs\n      ? { ...userAssignedOrgSelect }\n      : { select: { uuid: true } },\n    moveType: true,\n  };\n};\n\nexport const accountWithProfile = Prisma.validator<Prisma.AccountDefaultArgs>()(\n  {\n    select: {\n      id: true,\n      password: true,\n      email: true,\n    },\n  }\n);\n\nexport type AccountWithProfile = Prisma.AccountGetPayload<\n  typeof accountWithProfile\n> & { profile: DefaultUserProfile };\n\nconst defaultUserProfile = Prisma.validator<Prisma.UserProfileDefaultArgs>()({\n  include: {\n    currentOrg: {\n      include: { base: true },\n    },\n    // sponsor: {\n    //   select: { id: true },\n    // },\n    // supervisor: {\n    //   select: { id: true },\n    // },\n    // checklists: {\n    //   where: {\n    //     isComplete: false,\n    //   },\n    // },\n    orgRoles: {\n      include: {\n        orgRole: {\n          include: {\n            role: true,\n          },\n        },\n      },\n    },\n  },\n});\n\nexport type DefaultUserProfile = Prisma.UserProfileGetPayload<\n  typeof defaultUserProfile\n>;\n\nexport type UserSessionData = {\n  roles: BasicRoleInfo[];\n  permissions: string;\n  email: string;\n  currentOrg: Organization;\n} & Omit<\n  DefaultUserProfile,\n  | 'emailVerified'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'cssVerified'\n  | 'orgRoles'\n  | 'account'\n  | 'supervisorId'\n  | 'isDeleted'\n  | 'sponsorId'\n  | 'currentOrgId'\n  | 'currentOrg'\n  | 'previousOrgId'\n  | 'nextOrgId'\n  | 'moveType'\n  | 'isDormResident'\n  | 'hasDependents'\n  | 'hasEFMP'\n  | 'hasGraduated'\n  | 'sponsorReach'\n  | 'checklists'\n  | 'requestedOrgId'\n  | 'name'\n>;\n\nconst userWithChecklistsAndCount =\n  Prisma.validator<Prisma.UserProfileDefaultArgs>()({\n    select: {\n      ...userProfileSelect({\n        includeMetadata: true,\n        includeVerified: true,\n      }),\n      _count: {\n        select: {\n          checklists: true,\n        },\n      },\n      checklists: {\n        include: { template: true },\n      },\n    },\n  });\n\nexport type UserWithChecklistsAndCount = Prisma.UserProfileGetPayload<\n  typeof userWithChecklistsAndCount\n>;\n\nconst checklistWithItems = Prisma.validator<Prisma.ChecklistDefaultArgs>()({\n  include: {\n    template: true,\n    items: {\n      include: {\n        comments: {\n          include: {\n            postedBy: true,\n          },\n        },\n        completedBy: true,\n        updatedBy: true,\n        templateItem: {\n          include: {\n            requiredRole: true,\n          },\n        },\n      },\n    },\n  },\n});\n\nexport type ChecklistWithItems = Prisma.ChecklistGetPayload<\n  typeof checklistWithItems\n>;\n\nconst checklistItemWithTemplateAndUser = Prisma.validator<Prisma.ChecklistItemDefaultArgs>()({\n  include: {\n    templateItem: true,\n    checklist: {\n      include: {\n        user: true,\n      },\n    },\n  },\n});\n\nexport type ChecklistItemWithTemplateAndUser = Prisma.ChecklistItemGetPayload<typeof checklistItemWithTemplateAndUser>\n\nconst checklistWithTemplate = Prisma.validator<Prisma.ChecklistDefaultArgs>()({\n  select: {\n    id: true,\n    template: { select: { id: true, name: true, type: true } },\n  },\n});\n\nexport type ChecklistWithTemplate = Prisma.ChecklistGetPayload<\n  typeof checklistWithTemplate\n>;\n\nexport const organizationWithSubAndMembers =\n  Prisma.validator<Prisma.OrganizationDefaultArgs>()({\n    select: {\n      subOrgs: {\n        select: {\n          id: true,\n          uuid: true,\n        },\n      },\n      currentMembers: {\n        include: {\n          checklists: {\n            include: {\n              user: {\n                select: {\n                  id: true,\n                  workEmail: true,\n                  name: true,\n                  rank: true,\n                  currentOrg: {\n                    select: {\n                      uuid: true,\n                      id: true,\n                      name: true,\n                      abbreviation: true,\n                    },\n                  },\n                },\n              },\n              items: {\n                include: {\n                  templateItem: {\n                    include: {\n                      requiredRole: true,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  });\n\nexport const checklistWithUser =\n  Prisma.validator<Prisma.ChecklistItemDefaultArgs>()({\n    include: {\n      checklist: {\n        include: {\n          user: {\n            select: {\n              id: true,\n              name: true,\n              workEmail: true,\n              rank: true,\n            },\n          },\n        },\n      },\n    },\n  });\n\nconst checklistWithItemsAndUser =\n  Prisma.validator<Prisma.ChecklistDefaultArgs>()({\n    select: {\n      user: {\n        select: {\n          id: true,\n          workEmail: true,\n          name: true,\n          rank: true,\n          currentOrg: {\n            select: {\n              uuid: true,\n              id: true,\n              name: true,\n              abbreviation: true,\n              subOrgs: {\n                select: {\n                  uuid: true,\n                  id: true,\n                },\n              },\n            },\n          },\n        },\n      },\n      items: {\n        select: {\n          id: true,\n          createdAt: true,\n          dateCompleted: true,\n          updatedAt: true,\n          isComplete: true,\n          templateItem: {\n            include: {\n              requiredRole: true,\n            },\n          },\n          checklist: {\n            select: {\n              id: true,\n              user: {\n                select: {\n                  id: true,\n                  rank: true,\n                  name: true,\n                  workEmail: true,\n                  currentOrg: {\n                    select: {\n                      uuid: true,\n                      id: true,\n                      name: true,\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  });\n\nexport type ChecklistWithItemsAndUser = Prisma.ChecklistGetPayload<\n  typeof checklistWithItemsAndUser\n>;\n\nconst orgRoleWithData = Prisma.validator<Prisma.OrganizationsRolesDefaultArgs>()({\n  ...includeRoleInfo,\n});\n\nexport type OrgRoleWithInfo = Prisma.OrganizationsRolesGetPayload<\n  typeof orgRoleWithData\n>;\n\nconst orgWithOutBoundMembers =\n  Prisma.validator<Prisma.OrganizationDefaultArgs>()({\n    select: {\n      outboundMembers: {\n        select: {\n          id: true,\n          name: true,\n          workEmail: true,\n          personalEmail: true,\n          workPhone: true,\n          personalPhone: true,\n          updatedAt: true,\n          nextOrg: true,\n          previousOrg: true,\n          currentOrg: true,\n          moveType: true,\n          checklists: true,\n          supervisor: {\n            select: { name: true, workEmail: true },\n          },\n        },\n      },\n    },\n  });\n\nexport type OrgWithOutBoundMembers = Prisma.OrganizationGetPayload<\n  typeof orgWithOutBoundMembers\n>;\n\nconst orgWithInboundMembers =\n  Prisma.validator<Prisma.OrganizationDefaultArgs>()({\n    select: {\n      uuid: true,\n      id: true,\n      inboundMembers: {\n        select: {\n          id: true,\n          name: true,\n          workEmail: true,\n          personalEmail: true,\n          workPhone: true,\n          personalPhone: true,\n          updatedAt: true,\n          nextOrg: true,\n          previousOrg: true,\n          currentOrg: true,\n          moveType: true,\n          supervisor: { select: { name: true, workEmail: true } },\n          checklists: {\n            select: {\n              id: true,\n              template: {\n                select: {\n                  id: true,\n                  name: true,\n                  description: true,\n                  type: true,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  });\n\nexport type OrgWithInboundMembers = Prisma.OrganizationGetPayload<\n  typeof orgWithInboundMembers\n>;\n\nconst orgWithDescendants = Prisma.validator<Prisma.OrganizationDefaultArgs>()({\n  include: { children: true, templates: true, orgRoles: true },\n});\n\nexport type OrgWithDescendants = Prisma.OrganizationGetPayload<\n  typeof orgWithDescendants\n>;\n\nconst orgRoot = Prisma.validator<Prisma.OrganizationDefaultArgs>()({\n  include: { children: true, templates: true, orgRoles: true },\n});\n\nexport type OrgRoot = Prisma.OrganizationGetPayload<typeof orgRoot>;\n\nconst orgAncestor = Prisma.validator<Prisma.OrganizationDefaultArgs>()({\n  include: { parent: true },\n});\n\nexport type OrgAncestorTree = Prisma.OrganizationGetPayload<typeof orgAncestor>;\n\nexport const orgRoleWithCount =\n  Prisma.validator<Prisma.OrganizationsRolesDefaultArgs>()({\n    include: {\n      role: true,\n      _count: {\n        select: {\n          users: true,\n        },\n      },\n    },\n  });\n\nconst orgRoleWithUsers = Prisma.validator<Prisma.OrganizationsRolesDefaultArgs>()(\n  {\n    include: {\n      role: true,\n      users: { include: { user: true } },\n    },\n  }\n);\n\nexport type OrgRoleWithUsers = Prisma.OrganizationsRolesGetPayload<\n  typeof orgRoleWithUsers\n>;\n\nconst templateWithItems = Prisma.validator<Prisma.TemplateDefaultArgs>()({\n  include: {\n    items: true,\n  },\n});\n\nexport type TemplateWithItems = Prisma.TemplateGetPayload<\n  typeof templateWithItems\n>;\n\nconst orgWithTemplates = Prisma.validator<Prisma.OrganizationDefaultArgs>()({\n  include: {\n    templates: true,\n  },\n});\n\nexport type OrgWithTemplates = Prisma.OrganizationGetPayload<\n  typeof orgWithTemplates\n>;\n\n// Edit 'getUserChecklists' in checklist.server.ts for the query.\nconst checklistItemWithTemplate =\n  Prisma.validator<Prisma.ChecklistItemDefaultArgs>()({\n    include: {\n      comments: {\n        include: {\n          postedBy: true,\n        },\n      },\n      completedBy: true,\n      updatedBy: true,\n      templateItem: {\n        include: {\n          requiredRole: true,\n        },\n      },\n    },\n  });\n\nexport type ChecklistItemWithTemplate = Prisma.ChecklistItemGetPayload<\n  typeof checklistItemWithTemplate\n>;\n\nconst orgRoleWithChecklistItems =\n  Prisma.validator<Prisma.OrganizationsRolesDefaultArgs>()({\n    select: {\n      id: true,\n      uuid: true,\n      role: {\n        select: {\n          abbreviation: true,\n          description: true,\n          level: true,\n          templateItems: {\n            select: {\n              id: true,\n              name: true,\n              usedByChecklistItems: {\n                select: {\n                  id: true,\n                  createdAt: true,\n                  dateCompleted: true,\n                  userComplete: true,\n                  isDeleted: true,\n                  comments: {\n                    include: {\n                      postedBy: true,\n                    },\n                  },\n                  updatedAt: true,\n                  isComplete: true,\n                  completedBy: true,\n                  updatedBy: true,\n                  templateItem: {\n                    select: {\n                      id: true,\n                      name: true,\n                      description: true,\n                      template: {\n                        select: {\n                          id: true,\n                          name: true,\n                          type: true,\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  });\n\nexport type OrgRoleWithChecklistItems = Prisma.OrganizationsRolesGetPayload<\n  typeof orgRoleWithChecklistItems\n>;\n"],"names":["ChecklistType","UserRank","TailwindWidth","includeRoleInfo","userAssignedOrgSelect","userProfileSelect","options","includeMetadata","includeVerified","includePendingOrgs","Prisma"],"mappings":"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"}