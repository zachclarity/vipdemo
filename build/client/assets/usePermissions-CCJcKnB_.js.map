{"version":3,"file":"usePermissions-CCJcKnB_.js","sources":["../../../app/lib/hooks/usePermissions.ts"],"sourcesContent":["import type { CategoryPermission } from '@lib/types';\nimport type { AttributeCategory, Operation } from '@lib/utils';\nimport { compareMaps, objectToMap, verifyAttributes } from '@lib/utils';\nimport { useCallback } from 'react';\n\n/**\n * Checks the user permissions for the required values\n * @param {string} userPermissionsString Provided from user object as a JSON parseable string that represents an array of arrays.\n * For example, '[['tasks', ['READ', 'WRITE']]]'\n * @param {CategoryPermission | CategoryPermission[]} requiredPermissionsObject\n * Example: 'chk:READ,WRITE'\n * @returns {boolean}\n */\nexport const permissionCallback = (\n  userPermissionsString: string,\n  requiredPermissionsObject: CategoryPermission | CategoryPermission[]\n): boolean => {\n  if (!userPermissionsString || !requiredPermissionsObject) return false;\n  // Convert strings to Map()s\n  const userPermissions = new Map<AttributeCategory, Operation[]>(\n    JSON.parse(userPermissionsString)\n  );\n\n  // object to map\n  const requiredPermissions = objectToMap(requiredPermissionsObject);\n\n  verifyAttributes(userPermissions);\n\n  return compareMaps(userPermissions, requiredPermissions);\n};\n\nconst UsePermissions = () => useCallback(permissionCallback, []);\n\nexport default UsePermissions;\n"],"names":["permissionCallback","userPermissionsString","requiredPermissionsObject","userPermissions","requiredPermissions","objectToMap","verifyAttributes","compareMaps","UsePermissions","useCallback"],"mappings":"8cAaa,MAAAA,EAAqB,CAChCC,EACAC,IACY,CACZ,GAAI,CAACD,GAAyB,CAACC,EAAkC,MAAA,GAEjE,MAAMC,EAAkB,IAAI,IAC1B,KAAK,MAAMF,CAAqB,CAClC,EAGMG,EAAsBC,EAAYH,CAAyB,EAEjE,OAAAI,EAAiBH,CAAe,EAEzBI,EAAYJ,EAAiBC,CAAmB,CACzD,EAEMI,EAAiB,IAAMC,cAAYT,EAAoB,CAAE,CAAA"}